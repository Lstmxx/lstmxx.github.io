{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1695293636379},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1695293636379},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1695293636379},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1695293636379},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1695293636380},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1695293636379},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1695293636380},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1695293636381},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1695293636382},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1695293636382},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1695293636382},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1695293636382},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1695293636382},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1695293636382},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1695293636383},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1695293636383},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1695293636382},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1695293636383},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1695293636383},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1695293636380},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1695293636381},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1695293636381},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1695293636381},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1695293636381},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1695293636381},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1695293636381},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1695293636383},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1695293636384},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1695293636382},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1695293636384},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1695293636385},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1695293636384},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1695293636384},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1695293636385},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1695293636385},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1695293636385},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1695293636383},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1695293636385},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1695293636385},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1695293636384},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1695293636384},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1695293636384},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1695293636384},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1695293636387},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1695293636388},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1695293636389},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1695293636389},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1695293636390},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1695293636387},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1695293636386},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1695293636388},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1695293636386},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1695293636386},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1695293636386},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1695293636386},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1695293636386},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1695293636387},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1695293636390},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1695293636389},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1695293636390},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1695293636390},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1695293636391},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1695293636391},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1695293636391},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1695293636391},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1695293636391},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1695293636389},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1695293636391},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1695293636392},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1695293636392},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1695293636392},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1695293636393},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1695293636392},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1695293636392},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1695293636388},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1695293636393},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1695293636393},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1695293636393},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1695293636391},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1695293636391},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1695303213370},{"_id":"themes/butterfly/README.md","hash":"b5d6e7271b88d1a63755386442663af03e36a428","modified":1695450949434},{"_id":"themes/butterfly/package.json","hash":"1646604798f745ef068852772eb22239985ba731","modified":1695450949430},{"_id":"themes/butterfly/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1695450949366},{"_id":"themes/butterfly/_config.yml","hash":"459517785a7161e07c333bfe2900243b6287f905","modified":1695450949426},{"_id":"themes/butterfly/README_CN.md","hash":"86569b94949392e9b981608433495f0941d20b0c","modified":1695450949433},{"_id":"themes/butterfly/plugins.yml","hash":"d0e179ae31cdc62037062432b0ee7a9008155a73","modified":1695450949432},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1695450949367},{"_id":"themes/butterfly/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1695450949366},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1695450949367},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1695303213371},{"_id":"themes/butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1695450949370},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1695303213379},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1695303213379},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1695303213379},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1695303213380},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1695303213369},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1695303213370},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1695303213370},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1695303213370},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1695303213370},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1695450949374},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"d15124c488273ea0801a042888feadc9261d0b2f","modified":1695450949380},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1695303213380},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1695303213371},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1695303213380},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1695303213380},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1695303213373},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1695303213380},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1695450949402},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1695450949402},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1695303213380},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1695450949403},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1695450949402},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1695303213380},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1695450949403},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1695450949403},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1695303213381},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1695450949404},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1695450949404},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1695450949405},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1695303213381},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1695450949405},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1695450949406},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1695450949405},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1695450949405},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1695450949406},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1695450949406},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1695450949406},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1695450949406},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1695303213386},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1695303213386},{"_id":"themes/butterfly/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1695450949419},{"_id":"themes/butterfly/source/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1695450949420},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1695303213386},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1695450949373},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1695303213371},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1695303213371},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1695303213387},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1695450949374},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1695303213372},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1695450949421},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1695303213372},{"_id":"themes/butterfly/source/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1695450949421},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1695450949376},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"1ed873db25eec869beebb6873f04e19f0b0f4134","modified":1695450949378},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1695303213372},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1695450949380},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1695450949380},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1695303213376},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"cde142861edfc7aab435b8a0ebb84d9ba450fb5b","modified":1695450949391},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1695303213373},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1695303213379},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1695303213379},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"51868d861c94a9f1ad7c0dbd66d2f475c5d4ea62","modified":1695450949410},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"e0de61a059b5e6c7b8ebc7149b4650bdcd69af5e","modified":1695450949409},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1695303213379},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1695450949412},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1695450949410},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1695450949396},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1695303213383},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1695303213383},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1695303213383},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1695303213383},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1695450949412},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"8cd2aaa32cd68cd1908c9001444a811c3d0f9267","modified":1695450949413},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1695303213383},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1695450949414},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"fc9424d9c5def2201ec1d04dc79d0beedc1d2175","modified":1695450949414},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1695450949414},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1695450949414},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1695303213384},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1695303213383},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1695303213384},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"e4f948b0d4eb5483b2b360e56cbfe3359751b438","modified":1695450949415},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"c481d1f689a4e6d7ee492a03751bda47a30225ce","modified":1695450949415},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1695303213384},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1695303213384},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1695303213384},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1695303213384},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1695303213384},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1695303213385},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"b3ea08d9460122751144a3ca835e009a460d6ad3","modified":1695450949416},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1695303213385},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1695303213384},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1695450949418},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1695450949418},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1695303213385},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1695303213385},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1695303213386},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1695450949421},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1695303213375},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1695450949421},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1695303213375},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1695450949381},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1695303213375},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1695303213375},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1695303213375},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1695303213375},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5d8a0a3a7690d6d01e3feb91c2a36a5cd651b1","modified":1695450949385},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1695450949385},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1695450949385},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1695450949385},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1695450949386},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"35ae7980f658a349c5956c5699efd435b604b836","modified":1695450949386},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1695450949386},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1695303213376},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1695450949387},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1695450949387},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1695450949387},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1695450949387},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1695450949387},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"0a1b8fe95623b095eb7ede3f30ca327684d1e613","modified":1695450949388},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1695450949382},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1695303213374},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"d02f3cc9e6183e7d05c7e90e9ae1dee5ce21f297","modified":1695450949383},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ae1ccd78926cc19399d396b237d5161d7cde44a8","modified":1695450949390},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"d0ce1891b042dcc2c93cacc866e38721b94aa4c4","modified":1695450949389},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1695450949391},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1695303213377},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1695450949393},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1695303213382},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1695303213378},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1695303213378},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1695303213382},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1695303213382},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1695450949411},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1695303213382},{"_id":"source/categories/index.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1695438744205},{"_id":"source/_posts/socketio实现服务器推送（demo实现一个聊天室）.md","hash":"c857d5a1a161c646a19afa09747568af04fc2162","modified":1695440432475},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"3ec354778f6a4ac97fb64d5629c83b293ccceb5e","modified":1695450141273},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1695450141275},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1695450141275},{"_id":"themes/butterfly2/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1695450801606},{"_id":"themes/butterfly2/README.md","hash":"b5d6e7271b88d1a63755386442663af03e36a428","modified":1695450801606},{"_id":"themes/butterfly2/README_CN.md","hash":"86569b94949392e9b981608433495f0941d20b0c","modified":1695450801606},{"_id":"themes/butterfly2/_config.yml","hash":"459517785a7161e07c333bfe2900243b6287f905","modified":1695450801606},{"_id":"themes/butterfly2/package.json","hash":"1646604798f745ef068852772eb22239985ba731","modified":1695450801615},{"_id":"themes/butterfly2/plugins.yml","hash":"d0e179ae31cdc62037062432b0ee7a9008155a73","modified":1695450801615},{"_id":"themes/butterfly2/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1695450801607},{"_id":"themes/butterfly2/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1695450801607},{"_id":"themes/butterfly2/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1695450801607},{"_id":"themes/butterfly2/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1695450801607},{"_id":"themes/butterfly2/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1695450801607},{"_id":"themes/butterfly2/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1695450801607},{"_id":"themes/butterfly2/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1695450801615},{"_id":"themes/butterfly2/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1695450801615},{"_id":"themes/butterfly2/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1695450801615},{"_id":"themes/butterfly2/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1695450801615},{"_id":"themes/butterfly2/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1695450801606},{"_id":"themes/butterfly2/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"fc468a93a64c7a3e408fbac921c9f5a5a8f32027","modified":1695450801606},{"_id":"themes/butterfly2/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1695450801606},{"_id":"themes/butterfly2/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1695450801606},{"_id":"themes/butterfly2/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1695450801606},{"_id":"themes/butterfly2/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/rightside.pug","hash":"d15124c488273ea0801a042888feadc9261d0b2f","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1695450801609},{"_id":"themes/butterfly2/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1695450801615},{"_id":"themes/butterfly2/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1695450801609},{"_id":"themes/butterfly2/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1695450801615},{"_id":"themes/butterfly2/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1695450801615},{"_id":"themes/butterfly2/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1695450801615},{"_id":"themes/butterfly2/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1695450801615},{"_id":"themes/butterfly2/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1695450801616},{"_id":"themes/butterfly2/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1695450801615},{"_id":"themes/butterfly2/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1695450801616},{"_id":"themes/butterfly2/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1695450801616},{"_id":"themes/butterfly2/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1695450801616},{"_id":"themes/butterfly2/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1695450801616},{"_id":"themes/butterfly2/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1695450801616},{"_id":"themes/butterfly2/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1695450801616},{"_id":"themes/butterfly2/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1695450801616},{"_id":"themes/butterfly2/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1695450801617},{"_id":"themes/butterfly2/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1695450801617},{"_id":"themes/butterfly2/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1695450801617},{"_id":"themes/butterfly2/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1695450801617},{"_id":"themes/butterfly2/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1695450801621},{"_id":"themes/butterfly2/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1695450801621},{"_id":"themes/butterfly2/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1695450801621},{"_id":"themes/butterfly2/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1695450801621},{"_id":"themes/butterfly2/source/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1695450801621},{"_id":"themes/butterfly2/source/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1695450801622},{"_id":"themes/butterfly2/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1695450801622},{"_id":"themes/butterfly2/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1695450801621},{"_id":"themes/butterfly2/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1695450801607},{"_id":"themes/butterfly2/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1695450801608},{"_id":"themes/butterfly2/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/mixins/post-ui.pug","hash":"1ed873db25eec869beebb6873f04e19f0b0f4134","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1695450801609},{"_id":"themes/butterfly2/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/pjax.pug","hash":"cde142861edfc7aab435b8a0ebb84d9ba450fb5b","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1695450801614},{"_id":"themes/butterfly2/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1695450801614},{"_id":"themes/butterfly2/source/css/_global/index.styl","hash":"51868d861c94a9f1ad7c0dbd66d2f475c5d4ea62","modified":1695450801617},{"_id":"themes/butterfly2/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1695450801615},{"_id":"themes/butterfly2/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1695450801615},{"_id":"themes/butterfly2/source/css/_global/function.styl","hash":"e0de61a059b5e6c7b8ebc7149b4650bdcd69af5e","modified":1695450801617},{"_id":"themes/butterfly2/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1695450801617},{"_id":"themes/butterfly2/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1695450801618},{"_id":"themes/butterfly2/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1695450801614},{"_id":"themes/butterfly2/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/head.styl","hash":"8cd2aaa32cd68cd1908c9001444a811c3d0f9267","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/post.styl","hash":"fc9424d9c5def2201ec1d04dc79d0beedc1d2175","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1695450801618},{"_id":"themes/butterfly2/source/css/_mode/darkmode.styl","hash":"e4f948b0d4eb5483b2b360e56cbfe3359751b438","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_mode/readmode.styl","hash":"c481d1f689a4e6d7ee492a03751bda47a30225ce","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/homepage.styl","hash":"b3ea08d9460122751144a3ca835e009a460d6ad3","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1695450801619},{"_id":"themes/butterfly2/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1695450801620},{"_id":"themes/butterfly2/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1695450801622},{"_id":"themes/butterfly2/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1695450801622},{"_id":"themes/butterfly2/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1695450801620},{"_id":"themes/butterfly2/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1695450801610},{"_id":"themes/butterfly2/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1695450801620},{"_id":"themes/butterfly2/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1695450801620},{"_id":"themes/butterfly2/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/artalk.pug","hash":"5d5d8a0a3a7690d6d01e3feb91c2a36a5cd651b1","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/index.pug","hash":"35ae7980f658a349c5956c5699efd435b604b836","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1695450801611},{"_id":"themes/butterfly2/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/comments/waline.pug","hash":"0a1b8fe95623b095eb7ede3f30ca327684d1e613","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/math/mermaid.pug","hash":"d0ce1891b042dcc2c93cacc866e38721b94aa4c4","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1695450801612},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/newest-comments/waline.pug","hash":"ae1ccd78926cc19399d396b237d5161d7cde44a8","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/card-post-count/waline.pug","hash":"d02f3cc9e6183e7d05c7e90e9ae1dee5ce21f297","modified":1695450801610},{"_id":"themes/butterfly2/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1695450801613},{"_id":"themes/butterfly2/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1695450801614},{"_id":"themes/butterfly2/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1695450801617},{"_id":"themes/butterfly2/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1695450801617},{"_id":"themes/butterfly2/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1695450801614},{"_id":"themes/butterfly2/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1695450801617},{"_id":"themes/butterfly2/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1695450801617},{"_id":"themes/butterfly2/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1695450801618}],"Category":[],"Data":[],"Page":[{"_content":"","source":"categories/index.md","raw":"","date":"2023-09-23T03:12:24.205Z","updated":"2023-09-23T03:12:24.205Z","path":"categories/index.html","_id":"clmvggc4u0000xpyh7k306yyd","title":"","comments":1,"layout":"page","content":"","site":{"data":{}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-09-21T10:53:56.379Z","updated":"2023-09-21T10:53:56.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clmt7p05e0000rlw74fwzgb6u","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"socketio实现服务器推送（demo实现一个聊天室）","date":"2020-06-29T03:20:26.000Z","_content":"\ndemo 演示地址：<http://chat.lstmxx.cn>\n\ngithub 地址：<https://github.com/Lstmxx/chatroom>\n\n## 前言\n\n服务端推送是一种服务器主动给客户端发送的技术，主要用于实时对客户端进行消息推送，如天气预报、聊天功能等。\n\n### HTTP 1.x\n\n在 websocket api 出现之前，由于 http1.x 的缺陷，导致通信只能由客户端发起，用户想要获取到实时数据变化，就要不停的向服务器发送请求，这种方法我们一般称为轮询。这种方法在 web 端可以一用，但是在移动端就不行了，想一想你的 app 不停的消耗你的流量发请求到服务器，这会导致用户流量的大量浪费，体现极其差。\n\n```js\nsetInterval(() => {\n  axios()then((res) => {\n    ···\n  }).catch(err => {\n    ···\n  })\n}, 3000)\n```\n\n### HTTP 2.0\n\n为了解决这一问题，终于在 http2.0 协议里面增加了一个新特性——服务器推送。而 Html5 根据这一特性提供了一种在单个 TCP 连接上进行全双工通讯的协议——[WebSocket](https://www.runoob.com/html/html5-websocket.html)。\n\n### Socketio\n\n#### 描述\n\n如果客户端想要使用 websocket 接受服务器推送的话，Socketio 是一个不错的选择。Socket.io 将 Websocket、轮询机制以及其它的实时通信方式（ajax 等）封装成了通用的接口，并且在服务端也实现了这些实时机制的相应代码。所以，使用 Socket.io 便不需要担心浏览器兼容问题。\n\n#### namespace 和 room\n\nsocketio 有两个重要的概念——namespace 和 room。两者关系是 namespace 包含 room。举个例子，你要通知北小区的 4 座的所有用户交管理费，你先找到了北小区（namespace）然后再找到 4 座（room），最后给 4 座里面的业主发送交管理费消息。\n\n## Socketio 的安装与使用\n\n### Vue 中使用 Socketio\n\n在 Vue 中有两种方式使用 Socketio\n\n#### 直接使用官方包\n\n下载\n\n```bash\nnpm install socket.io\n```\n\n引入\n\n```js\nimport io from 'socket.io-client'\n```\n\n使用\n\n```js\n// 这里的namespace和后端设置的namespace是一样的\nconst socket = io.connect(`http://${域名}/${namespace}`)\n\n// on函数是监听函数，接受两个参数，第一个是订阅名，第二个是接受订阅信息的回调\nsocket.on('chatMessage', res => {\n  console.log(res)\n})\nsocket.on('response', res => {\n  console.log(res)\n})\nsocket.on('connect', res => {\n  console.log(res)\n})\n···\n// emit是发送函数，第一个参数是后端的订阅名，第二个是数据，可以是任意类型\nsocket.emit('user_input', 'wdnmd')\n```\n\n#### 使用 VueSocketio\n\n相较于 socket.io-client，VueSocketio 自带支持在 vuex 中使用，这使得多组件共用消息更加便利。npm 地址：<https://www.npmjs.com/package/vue-socket.io> 。\n\n下载\n\n```bash\nnpm install vue-socket.io\n```\n\n引入\n\n```js\n// /fronted/src/main.js\nimport store from './store'\nimport VueSocketio from 'vue-socket.io'\n···\nVue.use(new VueSocketio({\n  debug: true,\n  connection: `/${namespace}`,\n  /* 推荐使用vuex引入，方便多组件状态共享 */\n  vuex: {\n    store,\n    actionPrefix: 'SOCKET_' // 前缀，为了区分vuex文件中响应函数和普通函数\n  }\n}))\n```\n\n单组件使用\n\n```js\n// 在需要监听的vue引入\n···\nexport default {\n  sockets: {\n    connect: function () {\n      console.log('socket connected')\n    },\n    received: function (res) {\n      console.log(res)\n    }\n  }\n}\n···\n```\n\nvuex 中使用\n\n```js\n// /store/module/room.js\n···\n// responseData 为响应数据\nSOCKET_received ({ state, rootState, commit }, responseData) {\n  // do something\n},\nSOCKET_join_one ({}, responseData) {\n  // do something\n}\n```\n\n### flask 中使用 Socketio\n\nflask 中使用 socketio 主要用到 Flask-SocketIO 这个包，官网地址：<https://flask-socketio.readthedocs.io/en/latest/> 。\n\n下载\n\n```python\npip install flask-socketio\n```\n\n使用\n\n```python\n···\n# /backend/blueprint/socketio.py\nfrom flask_cors import CORS # 跨域\nfrom flask_socketio import SocketIO, emit, join_room, leave_room, close_room, rooms, disconnect\n\n# 初始化socketio\nsocketio = SocketIO(app, cors_allowed_origins=\"*\")\n# 第一个参数为事件名，第二个为namespace\n# 通过监听namespace下的事件做出响应，这里的namespace和前面前端定义的namespace要相同\n# message为请求参数\n@socketio.on('test_input', namespace='/chatroom')\ndef test_input(message):\n    # do someting\n    socketio.emit('test_received', '收到啦', namespace='/chatroom')\n```\n\n在 app.py 中引入\n\n```python\n# /backend/app.py\nfrom blueprint.socketio import app, socketio, db\n···\nif __name__ == \"__main__\":\n    ···\n    socketio.run(app, host=\"0.0.0.0\", port=4999, debug=True)\n```\n\n### nginx 配置\n\n既然是前后端分离，那当然要使用 nginx 啦~\n\n配置 chatroom.conf\n\n```nginx\nupstream chat_frontend {\n    server 127.0.0.1:8181; # 前端工程运行的地址\n}\n\nupstream chat_backend {\n    server 127.0.0.1:4999; # 后端工程运行的地址\n}\n\nserver {\n    listen       80; # 监听端口\n    server_name  www.chatroom.com; #域名\n        location ^~ /api { # 普通接口路由\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-Server $host;\n            proxy_pass http://chat_backend;\n        }\n        location /socket.io { # socketio的路由\n            proxy_http_version 1.1;\n            proxy_buffering off;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_pass http://chat_backend;\n        }\n        location / { # 前端路由\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-Server $host;\n            proxy_pass http://chat_frontend;\n        }\n}\n```\n\n配置 host\n\n```conf\n···\n127.0.0.1 www.chatroom.com\n```\n\n### 通信\n\n前面把 flask 和 vue 都配置好了，那么先测试一下。\n\n整个流程非常简单，流程图如下：\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe93449800d38~tplv-t2oaga2asx-image.image)\n\n#### vue\n\n获取用户输入后，向目标事件发送数据。这里我自己实现了一个简陋的 rich-text，如果不追求效果直接用 input 标签就完事了。\n\n```js\n// /src/components/chat-room/message-box/message-box.vue\n···\nsendMessage (message) {\n  // 第一个参数为事件名，第二个参数为要发送的数据\n  this.$socket.emit('test_input', message)\n}\n```\n\n在 vuex 中监听 received 事件获取服务器返回消息。\n\n```js\n// /src/store/module/room.js\nexport default {\n  ···\n  actions: {\n    ···\n    SOCKET_test_received ({ state, rootState, commit }, responseData) {\n      console.log(responseData)\n    }\n  }\n}\n\n```\n\n#### flask\n\n后端这边就非常简单了，增加一个消息回调函数就好了。\n\n```python\nfrom flask_socketio import SocketIO, emit\nsocketio = SocketIO(app, cors_allowed_origins=\"*\")\n···\n@socketio.on('test_input', namespace='/chatroom')\ndef test_input(message):\n    # do someting\n    socketio.emit('test_received', '收到啦', namespace='/chatroom')\n    # 或者\n    # emit('test_received', '收到啦', namespace='/chatroom')\n```\n\n要注意的是，这个 emit 没有指定某一个 room，所以会广播给在这个 namespace 下的所有人。\n\n打开谷歌浏览器，效果如下：\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe94c8b5e4c45~tplv-t2oaga2asx-image.image)\n\n## 实现聊天室小 demo\n\n### 构思\n\n一个简单的聊天室肯定会涉及到用户，房间和消息记录。\n\n### 实现登录页面\n\n首先解决一下用户，最核心的是登录。先建一个用户表。\n\n```sql\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `password` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `create_time` datetime(0) DEFAULT NULL,\n  `avatar_image` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `room_id_set` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '每个用户所参加的房间',\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_user_username`(`username`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n```\n\n封装一下登录接口，使用 vuex 保存登录状态。因为关闭页面后 vuex 会清掉 token 使用 cookie 来保存（axios 的封装就不说了，不是重点）\n\n```js\n// /fronted/src/libs/requestApi.js\n···\nexport function baseLogin (config) {\n  const request = {\n    url: config.url,\n    method: 'POST',\n    data: config.data\n  }\n  return service.request(request)\n}\n```\n\n```js\n// /fronted/src/libs/request.js\nexport function login (config) {\n  return new Promise((resolve, reject) => {\n    baseLogin(config).then((response) => {\n      resolve(response.data.data)\n    }).catch((err) => {\n      reject(err)\n    })\n  })\n}\n```\n\n保存 token\n\n```js\n// /fronted/src/libs/utility/token.js\nimport Cookies from 'js-cookie'\nconst TOKEN_KEY = 'token'\nexport const setToken = (token) => {\n  Cookies.set(TOKEN_KEY, token, { expires: 1 })\n}\n\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY)\n  if (token !== 'null') return token\n  else return false\n}\n```\n\n编写 vuex 的 user 模块\n\n```js\n// /fronted/src/store/module/user.js\nimport { getToken, setToken } from '../../libs/utility/token'\nimport { login, getUserInfo, logout } from '@/libs/request'\nexport default {\n  state: {\n    token: getToken(),\n    userName: null,\n    userId: null,\n    avatarImage: null\n  },\n  getters: {\n    getToken (state) {\n      return state.token\n    },\n    getUserName (state) {\n      return state.userName\n    },\n    getUserId (state) {\n      return state.userId\n    },\n    getAvatarImage (state) {\n      return state.avatarImage\n    }\n  },\n  mutations: {\n    setToken (state, token) {\n      state.token = token\n      setToken(token)\n    },\n    setUserName (state, name) {\n      state.userName = name\n    },\n    setUserId (state, userId) {\n      state.userId = userId\n    },\n    setAvatarImage (state, avatarImage) {\n      state.avatarImage = avatarImage\n    }\n  },\n  actions: {\n    handleLogin ({ commit }, config) {\n      return new Promise((resolve, reject) => {\n        login(config).then((responseData) => {\n          commit('setToken', responseData.token)\n          resolve(responseData)\n        }).catch((err) => {\n          reject(err)\n          console.log(err)\n        })\n      })\n    },\n    loadUserInfo ({ commit }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo().then((responseData) => {\n          commit('setToken', getToken())\n          commit('setUserName', responseData.userInfo.name)\n          commit('setUserId', responseData.userInfo.userId)\n          commit('setAvatarImage', responseData.userInfo.avatar_image)\n          resolve(responseData)\n        }).catch((err) => {\n          commit('setToken', null)\n          reject(err)\n          console.log(err)\n        })\n      })\n    }\n  }\n}\n```\n\n在 login 页面中使用\n\n```js\n// /fronted/src/views/login/login.vue\nimport { mapActions } from 'vuex'\nexport default {\n  ···\n  methods: {\n    ...mapActions([\n      'handleLogin',\n      'loadUserInfo'\n    ]),\n    checkCapslock (e) {\n      const { key } = e\n      this.capsTooltip = key && key.length === 1 && (key >= 'A' && key <= 'Z')\n    },\n    // 登录，成功后跳转\n    onLogin () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/login',\n            data: this.loginForm\n          }\n          this.handleLogin(config).then(() => {\n            this.$Loading.hide()\n            this.$router.push({\n              name: 'ChatRoom'\n            })\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    },\n    // 注册，成功后回调登录\n    onRegister () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/register',\n            data: this.loginForm\n          }\n          this.handleLogin(config).then(() => {\n            this.$Loading.hide()\n            this.onLogin()\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n```\n\n后端方面，可以看看/backend/blueprint/user.py。ui 方面就不说了，不是重点。\n\n### 实现房间的创建，展示和加入功能\n\n对于房间来说，肯定要有创建和加入这两个功能的，下面先说说创建。\n\n先建个表吧\n\n```sql\nDROP TABLE IF EXISTS `room`;\nCREATE TABLE `room`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `owner` int(11) DEFAULT NULL COMMENT '房间创建人',\n  `user_set` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `description` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `create_time` datetime(0) DEFAULT NULL,\n  `update_time` datetime(0) DEFAULT NULL,\n  `avatar_image` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `room_hash_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_room_avatar_image`(`avatar_image`) USING BTREE,\n  INDEX `ix_room_create_time`(`create_time`) USING BTREE,\n  INDEX `ix_room_name`(`name`) USING BTREE,\n  INDEX `ix_room_owner`(`owner`) USING BTREE,\n  INDEX `ix_room_update_time`(`update_time`) USING BTREE,\n  CONSTRAINT `room_ibfk_1` FOREIGN KEY (`owner`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) ENGINE = InnoDB AUTO_INCREMENT = 38 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n```\n\n#### 创建房间\n\n首先先明确创建房间需要什么数据，我的想法是需要房间头像，房间名和房间描述。\n\n前端主要是获取了房间头像、房间名和房间描述后发送请求到后端。这里的 upLoadFile 是自己模仿 element 来写的组件，有兴趣可以在 /fronted/src/components/base/up-load-file/up-load-file.vue 查看\n\n```vue\n// /fronted/src/components/chat-room/room-list/room-list.vue\n<template>\n···\n    <el-dialog title=\"创建房间\" :visible.sync=\"createRoomDialog\">\n      <el-form :model=\"createRoom\" :rules=\"createRules\" ref=\"createRoomForm\">\n        <el-form-item label=\"房间名\" prop=\"hashId\">\n          <el-input v-model=\"createRoom.name\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n        <el-form-item label=\"房间描述\" prop=\"description\">\n          <el-input v-model=\"createRoom.description\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n        <el-form-item label=\"房间头像\" prop=\"avatarImage\">\n          <upLoadFile :maxImageNum=\"1\" @on-change=\"getFilePath\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"createRoomDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCreateRoom\">确 定</el-button>\n      </div>\n    </el-dialog>\n···\n</template>\n<script>\nimport { post } from '@/libs/request'\nimport upLoadFile from '@/components/base/up-load-file'\nexport default {\n  name: 'RoomList',\n  props: {\n    roomList: {\n      default: () => [],\n      type: Array\n    }\n  },\n  components: {\n    ···\n    upLoadFile\n  },\n  data () {\n    return {\n      ···\n      createRoom: {\n        name: '',\n        description: '',\n        avatarImage: ''\n      }\n    }\n  },\n  method: {\n    getFilePath (imageList) {\n      this.createRoom.avatarImage = imageList[0].base64Path\n    },\n    handleCreateRoom () {\n      this.$refs.createRoomForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/room/create',\n            data: this.createRoom\n          }\n          post(config).then((responseData) => {\n            this.$Loading.hide()\n            this.createRoom.name = ''\n            this.createRoomDialog = false\n            this.createRoom = {\n              name: '',\n              description: '',\n              avatarImage: ''\n            }\n            this.$message({\n              message: '创建成功',\n              type: 'success'\n            })\n            this.$emit('create-room-success', responseData.room)\n          }).catch((err) => {\n            this.$Loading.hide()\n            this.createRoomDialog = false\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n```\n\n后端这边就简单了，直接插入数据库。插入时候使用 base64 来生成房间码，之后加入房间要用。\n\n```python\n# /backend/blueprint/room.py\n···\n@room_bp.route('/api/room/create', methods=['POST'])\n@verify_token\ndef room_create(tokenData):\n    values = request.get_json()\n    user = User.query.filter_by(id=tokenData['userId']).first()\n    if user:\n        room = Room(name=values['name'],\n                    description=values['description'],\n                    user_set=str(tokenData['userId']),\n                    owner=user.id,\n                    avatar_image='')\n        db.session.add(room)\n        db.session.flush()\n        room.room_hash_id = hashlib.md5(f'{room.id}{time.time()}'.encode('utf-8')).hexdigest()\n        room.user_set = f'{room.user_set},{user.id}' if room.user_set else user.id\n        if values['avatarImage']:\n            avatartImageList = values['avatarImage'].split(',')\n            suffix = avatartImageList[0].split('/')[1].split(';')[0]\n            filename = f'room_avatar/{room.room_hash_id}.{suffix}'\n            print(filename)\n            with open(f'media/{filename}', 'wb') as f:\n                f.write(base64.b64decode(avatartImageList[1]))\n            room.avatar_image = filename\n        user.room_id_set = f'{user.room_id_set},{room.id}' if user.room_id_set else room.id\n        db.session.commit()\n        return jsonify({\n            'data': {\n                'room': JSONHelper.model_to_json(room)\n            },\n            'message': '成功',\n            'status': 200\n        })\n    return jsonify({\n        'data': '',\n        'message': '失败失败',\n        'status': 500\n    })\n```\n\n#### 展示房间\n\n这个其实就是拉一个房间列表。要注意的是前端获取到房间列表后，要调用 join_all 这个事件监听这些房间的消息。\n\n后端\n\n```python\n@room_bp.route('/api/room/list', methods=['GET'])\n@verify_token\ndef room_list(tokenData):\n    user = User.query.filter_by(id=tokenData['userId']).first()\n    if user:\n        roomlist = Room.query.filter(Room.id.in_(user.room_id_set.split(','))).all() if user.room_id_set else []\n        return jsonify({\n            'data': {\n                'roomList': JSONHelper.to_json_list(roomlist)\n            },\n            'message': '成功',\n            'status': 200\n        })\n    return jsonify({\n        'data': '',\n        'message': '失败失败',\n        'status': 500\n    })\n```\n\n前端这边先在 room 模块里编写加载房间列表函数。\n\n```js\n// /fronted/src/store/module/room.js\n···\nloadRoomList ({ commit }) {\n  return new Promise((resolve, reject) => {\n    const config = {\n      url: '/room/list'\n    }\n    get(config).then((responseData) => {\n      commit('setRoomList', responseData.roomList)\n      resolve(responseData.roomList)\n    }).catch((err) => {\n      reject(err)\n    })\n  })\n}\n```\n\n在 chat-room 页面调用。\n\n```js\n// /fronted/src/views/chat-room/chat-room.vue\nmounted () {\n  this.loadRoomList().then((roomList) => {\n    const request = {\n      roomList: roomList.map(room => room.id),\n      userId: this.userId\n    }\n    this.$socket.emit('join_all', request)\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n```\n\n后端响应 join_all 事件，调用 join_room 加入用户所在的所有房间。\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('join_all', namespace='/chatroom')\ndef join_chats(message):\n    \"\"\"加入多个聊天室\n    \"\"\"\n    user = User.query.filter_by(id=message['userId']).first()\n    if user and len(message['roomList']) > 0:\n        for roomId in message['roomList']:\n            join_room(roomId)\n            emit('received', { # 发送加入消息\n                'user': {\n                    'id': user.id,\n                    'name': user.username,\n                    'avatarImage': user.avatar_image,\n                },\n                'roomId': roomId,\n                'type': 'join'\n            }, namespace='/chatroom', room=roomId)\n```\n\n#### 加入房间\n\n获取对应的房间码后，输入加入就 OK 了。\n\n```vue\n// /fronted/src/components/chat-room/room-list/room-list.vue\n<template>\n···\n    <el-dialog title=\"加入房间\" :visible.sync=\"joinRoomDialog\">\n      <el-form :model=\"joinRoom\" :rules=\"joinRules\" ref=\"joinRoomForm\">\n        <el-form-item label=\"房间号\" prop=\"hashId\">\n          <el-input v-model=\"joinRoom.hashId\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"joinRoomDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleJoinRoom\">确 定</el-button>\n      </div>\n    </el-dialog>\n···\n</template>\n<script>\nimport { post } from '@/libs/request'\nexport default {\n  name: 'RoomList',\n  props: {\n    roomList: {\n      default: () => [],\n      type: Array\n    }\n  },\n  data () {\n    return {\n      ···\n      joinRoom: {\n        hashId: ''\n      }\n    }\n  },\n  method: {\n    handleJoinRoom () {\n      this.$refs.joinRoomForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/room/join',\n            data: {\n              roomIdHash: this.joinRoom.hashId\n            }\n          }\n          post(config).then((responseData) => {\n            this.$Loading.hide()\n            this.joinRoomDialog = false\n            this.$message({\n              message: '加入成功',\n              type: 'success'\n            })\n            this.$emit('create-room-success', responseData.room)\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n```\n\n加入成功后，和创建一样，调用 join_one_chat 事件来加入房间。\n\n```js\n// /fronted/src/views/chat-room/chat-room.vue\nhandleCreateJoinRoom (room) {\n  const roomList = this.roomList\n  roomList.push(room)\n  this.$store.commit('setRoomList', roomList)\n  const request = {\n    roomId: room.id,\n    userId: this.userId\n  }\n  this.$socket.emit('join_one_chat', request)\n}\n```\n\n后端响应回调。\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('join_one_chat', namespace='/chatroom')\ndef join_one_chat(join):\n    \"\"\"加入聊天室\n    \"\"\"\n    room = Room.query.filter_by(id=join['roomId']).first()\n    user = User.query.filter_by(id=join['userId']).first()\n    print(join)\n    if room and user:\n        join_room(room.id)\n        emit('received', {\n            'user': {\n                'id': user.id,\n                'name': user.username,\n                'avatarImage': user.avatar_image,\n            },\n            'roomId': room.id,\n            'type': 'join'\n        }, namespace='/chatroom', room=room)\n```\n\n### 消息记录的发送与保存\n\n先建个表\n\n```sql\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-----------------------------\n-Table structure for room_record\n-----------------------------\nDROP TABLE IF EXISTS `room_record`;\nCREATE TABLE `room_record`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `create_time` datetime(0) DEFAULT NULL,\n  `room_id` int(11) DEFAULT NULL,\n  `user_id` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_room_record_create_time`(`create_time`) USING BTREE,\n  INDEX `ix_room_record_room_id`(`room_id`) USING BTREE,\n  CONSTRAINT `room_record_ibfk_1` FOREIGN KEY (`room_id`) REFERENCES `room` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n\nSET FOREIGN_KEY_CHECKS = 1;\n```\n\n用户选择了对应房间，在对应房间中发送消息就 OK 了。\n\n```js\n// /fronted/src/components/chat-room/message-box/message-box.vue\n···\nimport { mapGetters, mapActions } from 'vuex'\nimport util from '@/libs/utility/util.js'\nimport UserMessage from '../user-message/index'\nimport JoinMessage from '../join-message/index'\nimport RichText from '@/components/base/rich-text/index'\nexport default {\n  name: 'MessageBox',\n  components: {\n    UserMessage,\n    JoinMessage,\n    RichText\n  },\n  computed: {\n    ...mapGetters({\n      selectedRoom: 'getSelectedRoom',\n      userId: 'getUserId',\n      userName: 'getUserName',\n      messageList: 'getMessageList',\n      isUpdate: 'getUpdate',\n      avatarImage: 'getAvatarImage'\n    })\n  },\n  watch: {\n    selectedRoom () {\n      this.setMessageContentScroll()\n    },\n    isUpdate () {\n      if (this.isUpdate) {\n        this.$forceUpdate()\n        this.updateComplete()\n        this.setMessageContentScroll()\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\n      'updateComplete',\n      'userInput'\n    ]),\n    setMessageContentScroll () {\n      this.$nextTick(() => {\n        const messageContent = document.getElementById('messageContent')\n        if (messageContent) {\n          if (messageContent.scrollHeight > messageContent.clientHeight) {\n            messageContent.scrollTop = messageContent.scrollHeight\n          }\n        }\n      })\n    },\n    sendMessage (message) {\n      const messageId = Number(new Date())\n      const messageContext = {\n        user: {\n          id: this.userId,\n          name: this.userName,\n          avatarImage: this.avatarImage\n        },\n        roomId: this.selectedRoom.id,\n        id: messageId,\n        message,\n        loading: true,\n        type: 'input'\n      }\n      const request = {\n        userId: this.userId,\n        roomId: this.selectedRoom.id,\n        id: messageId,\n        message,\n        type: 'input'\n      }\n      this.userInput(messageContext)\n      this.$socket.emit('user_send_message', request)\n    }\n  }\n}\n```\n\n后端。接收到请求后，完成插入数据库处理并通过 received 事件返回给前端\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('user_send_message', namespace='/chatroom')\ndef user_input(message):\n    \"\"\"获取用户输入\n    \"\"\"\n    userId = message['userId']\n    user = User.query.filter_by(id=message['userId']).first()\n    if user:\n        response = {\n            'user': {\n                'id': user.id,\n                'name': user.username,\n                'avatarImage': user.avatar_image,\n            },\n            'message': message['message'],\n            'roomId': message['roomId'],\n            'id': message['id'],\n            'type': message['type'],\n            'time': datetime.utcnow().isoformat(),\n        }\n        roomRecord = RoomRecord(content=message['message'], user_id=user.id, room_id=message['roomId'])\n        db.session.add(roomRecord)\n        db.session.commit()\n        socketio.emit('received', response,\n                        namespace='/chatroom',\n                        room=message['roomId'])\n```\n\n前端 vuex 的 room 模块接收\n\n```js\n// /fronted/src/store/module/room.js\nexport default {\n  action: {\n    updateComplete ({ commit }) {\n      commit('setUpdate', false)\n    },\n    SOCKET_received ({ state, rootState, commit }, responseData) {\n      const messageList = state.messageList\n      const user = rootState.user\n      responseData.time = normalizeTimeDetail(responseData.time)\n      if (user.userId === responseData.user.id && responseData.type !== 'join') {\n        for (let i = messageList[responseData.roomId].length 1; i > 0; i--) {\n          if (messageList[responseData.roomId][i].user.id === user.userId && responseData.id === messageList[responseData.roomId][i].id) {\n            messageList[responseData.roomId][i].loading = false\n            messageList[responseData.roomId][i].time = responseData.time\n            break\n          }\n        }\n        if (!state.update) {\n          commit('setUpdate', true)\n        }\n      } else {\n        if (!messageList[responseData.roomId]) {\n          messageList[responseData.roomId] = []\n        }\n        messageList[responseData.roomId].push(responseData)\n        if (!state.update) {\n          commit('setUpdate', state.selectedRoom ? responseData.roomId === state.selectedRoom.id : false)\n        }\n      }\n      commit('setMessageList', messageList)\n    }\n  }\n}\n```\n\n## 总结\n\n说到这里其实也说完了重点的地方了，有兴趣可以看看源码。第一次写文章，有不足的地方请大佬们多多指点。\n\n## 参考连接\n\n- [1] <https://www.runoob.com/html/html5-websocket.html>\n- [2] <https://www.npmjs.com/package/vue-socket.io>\n- [3] <https://flask-socketio.readthedocs.io/en/latest/>\n","source":"_posts/socketio实现服务器推送（demo实现一个聊天室）.md","raw":"---\ntitle: socketio实现服务器推送（demo实现一个聊天室）\ndate: 2020-06-29 11:20:26\ntags:\ncategories:\n---\n\ndemo 演示地址：<http://chat.lstmxx.cn>\n\ngithub 地址：<https://github.com/Lstmxx/chatroom>\n\n## 前言\n\n服务端推送是一种服务器主动给客户端发送的技术，主要用于实时对客户端进行消息推送，如天气预报、聊天功能等。\n\n### HTTP 1.x\n\n在 websocket api 出现之前，由于 http1.x 的缺陷，导致通信只能由客户端发起，用户想要获取到实时数据变化，就要不停的向服务器发送请求，这种方法我们一般称为轮询。这种方法在 web 端可以一用，但是在移动端就不行了，想一想你的 app 不停的消耗你的流量发请求到服务器，这会导致用户流量的大量浪费，体现极其差。\n\n```js\nsetInterval(() => {\n  axios()then((res) => {\n    ···\n  }).catch(err => {\n    ···\n  })\n}, 3000)\n```\n\n### HTTP 2.0\n\n为了解决这一问题，终于在 http2.0 协议里面增加了一个新特性——服务器推送。而 Html5 根据这一特性提供了一种在单个 TCP 连接上进行全双工通讯的协议——[WebSocket](https://www.runoob.com/html/html5-websocket.html)。\n\n### Socketio\n\n#### 描述\n\n如果客户端想要使用 websocket 接受服务器推送的话，Socketio 是一个不错的选择。Socket.io 将 Websocket、轮询机制以及其它的实时通信方式（ajax 等）封装成了通用的接口，并且在服务端也实现了这些实时机制的相应代码。所以，使用 Socket.io 便不需要担心浏览器兼容问题。\n\n#### namespace 和 room\n\nsocketio 有两个重要的概念——namespace 和 room。两者关系是 namespace 包含 room。举个例子，你要通知北小区的 4 座的所有用户交管理费，你先找到了北小区（namespace）然后再找到 4 座（room），最后给 4 座里面的业主发送交管理费消息。\n\n## Socketio 的安装与使用\n\n### Vue 中使用 Socketio\n\n在 Vue 中有两种方式使用 Socketio\n\n#### 直接使用官方包\n\n下载\n\n```bash\nnpm install socket.io\n```\n\n引入\n\n```js\nimport io from 'socket.io-client'\n```\n\n使用\n\n```js\n// 这里的namespace和后端设置的namespace是一样的\nconst socket = io.connect(`http://${域名}/${namespace}`)\n\n// on函数是监听函数，接受两个参数，第一个是订阅名，第二个是接受订阅信息的回调\nsocket.on('chatMessage', res => {\n  console.log(res)\n})\nsocket.on('response', res => {\n  console.log(res)\n})\nsocket.on('connect', res => {\n  console.log(res)\n})\n···\n// emit是发送函数，第一个参数是后端的订阅名，第二个是数据，可以是任意类型\nsocket.emit('user_input', 'wdnmd')\n```\n\n#### 使用 VueSocketio\n\n相较于 socket.io-client，VueSocketio 自带支持在 vuex 中使用，这使得多组件共用消息更加便利。npm 地址：<https://www.npmjs.com/package/vue-socket.io> 。\n\n下载\n\n```bash\nnpm install vue-socket.io\n```\n\n引入\n\n```js\n// /fronted/src/main.js\nimport store from './store'\nimport VueSocketio from 'vue-socket.io'\n···\nVue.use(new VueSocketio({\n  debug: true,\n  connection: `/${namespace}`,\n  /* 推荐使用vuex引入，方便多组件状态共享 */\n  vuex: {\n    store,\n    actionPrefix: 'SOCKET_' // 前缀，为了区分vuex文件中响应函数和普通函数\n  }\n}))\n```\n\n单组件使用\n\n```js\n// 在需要监听的vue引入\n···\nexport default {\n  sockets: {\n    connect: function () {\n      console.log('socket connected')\n    },\n    received: function (res) {\n      console.log(res)\n    }\n  }\n}\n···\n```\n\nvuex 中使用\n\n```js\n// /store/module/room.js\n···\n// responseData 为响应数据\nSOCKET_received ({ state, rootState, commit }, responseData) {\n  // do something\n},\nSOCKET_join_one ({}, responseData) {\n  // do something\n}\n```\n\n### flask 中使用 Socketio\n\nflask 中使用 socketio 主要用到 Flask-SocketIO 这个包，官网地址：<https://flask-socketio.readthedocs.io/en/latest/> 。\n\n下载\n\n```python\npip install flask-socketio\n```\n\n使用\n\n```python\n···\n# /backend/blueprint/socketio.py\nfrom flask_cors import CORS # 跨域\nfrom flask_socketio import SocketIO, emit, join_room, leave_room, close_room, rooms, disconnect\n\n# 初始化socketio\nsocketio = SocketIO(app, cors_allowed_origins=\"*\")\n# 第一个参数为事件名，第二个为namespace\n# 通过监听namespace下的事件做出响应，这里的namespace和前面前端定义的namespace要相同\n# message为请求参数\n@socketio.on('test_input', namespace='/chatroom')\ndef test_input(message):\n    # do someting\n    socketio.emit('test_received', '收到啦', namespace='/chatroom')\n```\n\n在 app.py 中引入\n\n```python\n# /backend/app.py\nfrom blueprint.socketio import app, socketio, db\n···\nif __name__ == \"__main__\":\n    ···\n    socketio.run(app, host=\"0.0.0.0\", port=4999, debug=True)\n```\n\n### nginx 配置\n\n既然是前后端分离，那当然要使用 nginx 啦~\n\n配置 chatroom.conf\n\n```nginx\nupstream chat_frontend {\n    server 127.0.0.1:8181; # 前端工程运行的地址\n}\n\nupstream chat_backend {\n    server 127.0.0.1:4999; # 后端工程运行的地址\n}\n\nserver {\n    listen       80; # 监听端口\n    server_name  www.chatroom.com; #域名\n        location ^~ /api { # 普通接口路由\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-Server $host;\n            proxy_pass http://chat_backend;\n        }\n        location /socket.io { # socketio的路由\n            proxy_http_version 1.1;\n            proxy_buffering off;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_pass http://chat_backend;\n        }\n        location / { # 前端路由\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-Server $host;\n            proxy_pass http://chat_frontend;\n        }\n}\n```\n\n配置 host\n\n```conf\n···\n127.0.0.1 www.chatroom.com\n```\n\n### 通信\n\n前面把 flask 和 vue 都配置好了，那么先测试一下。\n\n整个流程非常简单，流程图如下：\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe93449800d38~tplv-t2oaga2asx-image.image)\n\n#### vue\n\n获取用户输入后，向目标事件发送数据。这里我自己实现了一个简陋的 rich-text，如果不追求效果直接用 input 标签就完事了。\n\n```js\n// /src/components/chat-room/message-box/message-box.vue\n···\nsendMessage (message) {\n  // 第一个参数为事件名，第二个参数为要发送的数据\n  this.$socket.emit('test_input', message)\n}\n```\n\n在 vuex 中监听 received 事件获取服务器返回消息。\n\n```js\n// /src/store/module/room.js\nexport default {\n  ···\n  actions: {\n    ···\n    SOCKET_test_received ({ state, rootState, commit }, responseData) {\n      console.log(responseData)\n    }\n  }\n}\n\n```\n\n#### flask\n\n后端这边就非常简单了，增加一个消息回调函数就好了。\n\n```python\nfrom flask_socketio import SocketIO, emit\nsocketio = SocketIO(app, cors_allowed_origins=\"*\")\n···\n@socketio.on('test_input', namespace='/chatroom')\ndef test_input(message):\n    # do someting\n    socketio.emit('test_received', '收到啦', namespace='/chatroom')\n    # 或者\n    # emit('test_received', '收到啦', namespace='/chatroom')\n```\n\n要注意的是，这个 emit 没有指定某一个 room，所以会广播给在这个 namespace 下的所有人。\n\n打开谷歌浏览器，效果如下：\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe94c8b5e4c45~tplv-t2oaga2asx-image.image)\n\n## 实现聊天室小 demo\n\n### 构思\n\n一个简单的聊天室肯定会涉及到用户，房间和消息记录。\n\n### 实现登录页面\n\n首先解决一下用户，最核心的是登录。先建一个用户表。\n\n```sql\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `password` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `create_time` datetime(0) DEFAULT NULL,\n  `avatar_image` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `room_id_set` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '每个用户所参加的房间',\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_user_username`(`username`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n```\n\n封装一下登录接口，使用 vuex 保存登录状态。因为关闭页面后 vuex 会清掉 token 使用 cookie 来保存（axios 的封装就不说了，不是重点）\n\n```js\n// /fronted/src/libs/requestApi.js\n···\nexport function baseLogin (config) {\n  const request = {\n    url: config.url,\n    method: 'POST',\n    data: config.data\n  }\n  return service.request(request)\n}\n```\n\n```js\n// /fronted/src/libs/request.js\nexport function login (config) {\n  return new Promise((resolve, reject) => {\n    baseLogin(config).then((response) => {\n      resolve(response.data.data)\n    }).catch((err) => {\n      reject(err)\n    })\n  })\n}\n```\n\n保存 token\n\n```js\n// /fronted/src/libs/utility/token.js\nimport Cookies from 'js-cookie'\nconst TOKEN_KEY = 'token'\nexport const setToken = (token) => {\n  Cookies.set(TOKEN_KEY, token, { expires: 1 })\n}\n\nexport const getToken = () => {\n  const token = Cookies.get(TOKEN_KEY)\n  if (token !== 'null') return token\n  else return false\n}\n```\n\n编写 vuex 的 user 模块\n\n```js\n// /fronted/src/store/module/user.js\nimport { getToken, setToken } from '../../libs/utility/token'\nimport { login, getUserInfo, logout } from '@/libs/request'\nexport default {\n  state: {\n    token: getToken(),\n    userName: null,\n    userId: null,\n    avatarImage: null\n  },\n  getters: {\n    getToken (state) {\n      return state.token\n    },\n    getUserName (state) {\n      return state.userName\n    },\n    getUserId (state) {\n      return state.userId\n    },\n    getAvatarImage (state) {\n      return state.avatarImage\n    }\n  },\n  mutations: {\n    setToken (state, token) {\n      state.token = token\n      setToken(token)\n    },\n    setUserName (state, name) {\n      state.userName = name\n    },\n    setUserId (state, userId) {\n      state.userId = userId\n    },\n    setAvatarImage (state, avatarImage) {\n      state.avatarImage = avatarImage\n    }\n  },\n  actions: {\n    handleLogin ({ commit }, config) {\n      return new Promise((resolve, reject) => {\n        login(config).then((responseData) => {\n          commit('setToken', responseData.token)\n          resolve(responseData)\n        }).catch((err) => {\n          reject(err)\n          console.log(err)\n        })\n      })\n    },\n    loadUserInfo ({ commit }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo().then((responseData) => {\n          commit('setToken', getToken())\n          commit('setUserName', responseData.userInfo.name)\n          commit('setUserId', responseData.userInfo.userId)\n          commit('setAvatarImage', responseData.userInfo.avatar_image)\n          resolve(responseData)\n        }).catch((err) => {\n          commit('setToken', null)\n          reject(err)\n          console.log(err)\n        })\n      })\n    }\n  }\n}\n```\n\n在 login 页面中使用\n\n```js\n// /fronted/src/views/login/login.vue\nimport { mapActions } from 'vuex'\nexport default {\n  ···\n  methods: {\n    ...mapActions([\n      'handleLogin',\n      'loadUserInfo'\n    ]),\n    checkCapslock (e) {\n      const { key } = e\n      this.capsTooltip = key && key.length === 1 && (key >= 'A' && key <= 'Z')\n    },\n    // 登录，成功后跳转\n    onLogin () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/login',\n            data: this.loginForm\n          }\n          this.handleLogin(config).then(() => {\n            this.$Loading.hide()\n            this.$router.push({\n              name: 'ChatRoom'\n            })\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    },\n    // 注册，成功后回调登录\n    onRegister () {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/register',\n            data: this.loginForm\n          }\n          this.handleLogin(config).then(() => {\n            this.$Loading.hide()\n            this.onLogin()\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n```\n\n后端方面，可以看看/backend/blueprint/user.py。ui 方面就不说了，不是重点。\n\n### 实现房间的创建，展示和加入功能\n\n对于房间来说，肯定要有创建和加入这两个功能的，下面先说说创建。\n\n先建个表吧\n\n```sql\nDROP TABLE IF EXISTS `room`;\nCREATE TABLE `room`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `owner` int(11) DEFAULT NULL COMMENT '房间创建人',\n  `user_set` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `description` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `create_time` datetime(0) DEFAULT NULL,\n  `update_time` datetime(0) DEFAULT NULL,\n  `avatar_image` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `room_hash_id` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_room_avatar_image`(`avatar_image`) USING BTREE,\n  INDEX `ix_room_create_time`(`create_time`) USING BTREE,\n  INDEX `ix_room_name`(`name`) USING BTREE,\n  INDEX `ix_room_owner`(`owner`) USING BTREE,\n  INDEX `ix_room_update_time`(`update_time`) USING BTREE,\n  CONSTRAINT `room_ibfk_1` FOREIGN KEY (`owner`) REFERENCES `user` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) ENGINE = InnoDB AUTO_INCREMENT = 38 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n```\n\n#### 创建房间\n\n首先先明确创建房间需要什么数据，我的想法是需要房间头像，房间名和房间描述。\n\n前端主要是获取了房间头像、房间名和房间描述后发送请求到后端。这里的 upLoadFile 是自己模仿 element 来写的组件，有兴趣可以在 /fronted/src/components/base/up-load-file/up-load-file.vue 查看\n\n```vue\n// /fronted/src/components/chat-room/room-list/room-list.vue\n<template>\n···\n    <el-dialog title=\"创建房间\" :visible.sync=\"createRoomDialog\">\n      <el-form :model=\"createRoom\" :rules=\"createRules\" ref=\"createRoomForm\">\n        <el-form-item label=\"房间名\" prop=\"hashId\">\n          <el-input v-model=\"createRoom.name\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n        <el-form-item label=\"房间描述\" prop=\"description\">\n          <el-input v-model=\"createRoom.description\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n        <el-form-item label=\"房间头像\" prop=\"avatarImage\">\n          <upLoadFile :maxImageNum=\"1\" @on-change=\"getFilePath\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"createRoomDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCreateRoom\">确 定</el-button>\n      </div>\n    </el-dialog>\n···\n</template>\n<script>\nimport { post } from '@/libs/request'\nimport upLoadFile from '@/components/base/up-load-file'\nexport default {\n  name: 'RoomList',\n  props: {\n    roomList: {\n      default: () => [],\n      type: Array\n    }\n  },\n  components: {\n    ···\n    upLoadFile\n  },\n  data () {\n    return {\n      ···\n      createRoom: {\n        name: '',\n        description: '',\n        avatarImage: ''\n      }\n    }\n  },\n  method: {\n    getFilePath (imageList) {\n      this.createRoom.avatarImage = imageList[0].base64Path\n    },\n    handleCreateRoom () {\n      this.$refs.createRoomForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/room/create',\n            data: this.createRoom\n          }\n          post(config).then((responseData) => {\n            this.$Loading.hide()\n            this.createRoom.name = ''\n            this.createRoomDialog = false\n            this.createRoom = {\n              name: '',\n              description: '',\n              avatarImage: ''\n            }\n            this.$message({\n              message: '创建成功',\n              type: 'success'\n            })\n            this.$emit('create-room-success', responseData.room)\n          }).catch((err) => {\n            this.$Loading.hide()\n            this.createRoomDialog = false\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n```\n\n后端这边就简单了，直接插入数据库。插入时候使用 base64 来生成房间码，之后加入房间要用。\n\n```python\n# /backend/blueprint/room.py\n···\n@room_bp.route('/api/room/create', methods=['POST'])\n@verify_token\ndef room_create(tokenData):\n    values = request.get_json()\n    user = User.query.filter_by(id=tokenData['userId']).first()\n    if user:\n        room = Room(name=values['name'],\n                    description=values['description'],\n                    user_set=str(tokenData['userId']),\n                    owner=user.id,\n                    avatar_image='')\n        db.session.add(room)\n        db.session.flush()\n        room.room_hash_id = hashlib.md5(f'{room.id}{time.time()}'.encode('utf-8')).hexdigest()\n        room.user_set = f'{room.user_set},{user.id}' if room.user_set else user.id\n        if values['avatarImage']:\n            avatartImageList = values['avatarImage'].split(',')\n            suffix = avatartImageList[0].split('/')[1].split(';')[0]\n            filename = f'room_avatar/{room.room_hash_id}.{suffix}'\n            print(filename)\n            with open(f'media/{filename}', 'wb') as f:\n                f.write(base64.b64decode(avatartImageList[1]))\n            room.avatar_image = filename\n        user.room_id_set = f'{user.room_id_set},{room.id}' if user.room_id_set else room.id\n        db.session.commit()\n        return jsonify({\n            'data': {\n                'room': JSONHelper.model_to_json(room)\n            },\n            'message': '成功',\n            'status': 200\n        })\n    return jsonify({\n        'data': '',\n        'message': '失败失败',\n        'status': 500\n    })\n```\n\n#### 展示房间\n\n这个其实就是拉一个房间列表。要注意的是前端获取到房间列表后，要调用 join_all 这个事件监听这些房间的消息。\n\n后端\n\n```python\n@room_bp.route('/api/room/list', methods=['GET'])\n@verify_token\ndef room_list(tokenData):\n    user = User.query.filter_by(id=tokenData['userId']).first()\n    if user:\n        roomlist = Room.query.filter(Room.id.in_(user.room_id_set.split(','))).all() if user.room_id_set else []\n        return jsonify({\n            'data': {\n                'roomList': JSONHelper.to_json_list(roomlist)\n            },\n            'message': '成功',\n            'status': 200\n        })\n    return jsonify({\n        'data': '',\n        'message': '失败失败',\n        'status': 500\n    })\n```\n\n前端这边先在 room 模块里编写加载房间列表函数。\n\n```js\n// /fronted/src/store/module/room.js\n···\nloadRoomList ({ commit }) {\n  return new Promise((resolve, reject) => {\n    const config = {\n      url: '/room/list'\n    }\n    get(config).then((responseData) => {\n      commit('setRoomList', responseData.roomList)\n      resolve(responseData.roomList)\n    }).catch((err) => {\n      reject(err)\n    })\n  })\n}\n```\n\n在 chat-room 页面调用。\n\n```js\n// /fronted/src/views/chat-room/chat-room.vue\nmounted () {\n  this.loadRoomList().then((roomList) => {\n    const request = {\n      roomList: roomList.map(room => room.id),\n      userId: this.userId\n    }\n    this.$socket.emit('join_all', request)\n  }).catch((err) => {\n    console.log(err)\n  })\n}\n```\n\n后端响应 join_all 事件，调用 join_room 加入用户所在的所有房间。\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('join_all', namespace='/chatroom')\ndef join_chats(message):\n    \"\"\"加入多个聊天室\n    \"\"\"\n    user = User.query.filter_by(id=message['userId']).first()\n    if user and len(message['roomList']) > 0:\n        for roomId in message['roomList']:\n            join_room(roomId)\n            emit('received', { # 发送加入消息\n                'user': {\n                    'id': user.id,\n                    'name': user.username,\n                    'avatarImage': user.avatar_image,\n                },\n                'roomId': roomId,\n                'type': 'join'\n            }, namespace='/chatroom', room=roomId)\n```\n\n#### 加入房间\n\n获取对应的房间码后，输入加入就 OK 了。\n\n```vue\n// /fronted/src/components/chat-room/room-list/room-list.vue\n<template>\n···\n    <el-dialog title=\"加入房间\" :visible.sync=\"joinRoomDialog\">\n      <el-form :model=\"joinRoom\" :rules=\"joinRules\" ref=\"joinRoomForm\">\n        <el-form-item label=\"房间号\" prop=\"hashId\">\n          <el-input v-model=\"joinRoom.hashId\" autocomplete=\"off\" :maxlength='32' :minlength='32'></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"joinRoomDialog = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleJoinRoom\">确 定</el-button>\n      </div>\n    </el-dialog>\n···\n</template>\n<script>\nimport { post } from '@/libs/request'\nexport default {\n  name: 'RoomList',\n  props: {\n    roomList: {\n      default: () => [],\n      type: Array\n    }\n  },\n  data () {\n    return {\n      ···\n      joinRoom: {\n        hashId: ''\n      }\n    }\n  },\n  method: {\n    handleJoinRoom () {\n      this.$refs.joinRoomForm.validate(valid => {\n        if (valid) {\n          this.$Loading.show()\n          const config = {\n            url: '/room/join',\n            data: {\n              roomIdHash: this.joinRoom.hashId\n            }\n          }\n          post(config).then((responseData) => {\n            this.$Loading.hide()\n            this.joinRoomDialog = false\n            this.$message({\n              message: '加入成功',\n              type: 'success'\n            })\n            this.$emit('create-room-success', responseData.room)\n          }).catch((err) => {\n            this.$Loading.hide()\n            console.log(err)\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n```\n\n加入成功后，和创建一样，调用 join_one_chat 事件来加入房间。\n\n```js\n// /fronted/src/views/chat-room/chat-room.vue\nhandleCreateJoinRoom (room) {\n  const roomList = this.roomList\n  roomList.push(room)\n  this.$store.commit('setRoomList', roomList)\n  const request = {\n    roomId: room.id,\n    userId: this.userId\n  }\n  this.$socket.emit('join_one_chat', request)\n}\n```\n\n后端响应回调。\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('join_one_chat', namespace='/chatroom')\ndef join_one_chat(join):\n    \"\"\"加入聊天室\n    \"\"\"\n    room = Room.query.filter_by(id=join['roomId']).first()\n    user = User.query.filter_by(id=join['userId']).first()\n    print(join)\n    if room and user:\n        join_room(room.id)\n        emit('received', {\n            'user': {\n                'id': user.id,\n                'name': user.username,\n                'avatarImage': user.avatar_image,\n            },\n            'roomId': room.id,\n            'type': 'join'\n        }, namespace='/chatroom', room=room)\n```\n\n### 消息记录的发送与保存\n\n先建个表\n\n```sql\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-----------------------------\n-Table structure for room_record\n-----------------------------\nDROP TABLE IF EXISTS `room_record`;\nCREATE TABLE `room_record`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `content` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `create_time` datetime(0) DEFAULT NULL,\n  `room_id` int(11) DEFAULT NULL,\n  `user_id` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE,\n  INDEX `ix_room_record_create_time`(`create_time`) USING BTREE,\n  INDEX `ix_room_record_room_id`(`room_id`) USING BTREE,\n  CONSTRAINT `room_record_ibfk_1` FOREIGN KEY (`room_id`) REFERENCES `room` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT\n) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;\n\nSET FOREIGN_KEY_CHECKS = 1;\n```\n\n用户选择了对应房间，在对应房间中发送消息就 OK 了。\n\n```js\n// /fronted/src/components/chat-room/message-box/message-box.vue\n···\nimport { mapGetters, mapActions } from 'vuex'\nimport util from '@/libs/utility/util.js'\nimport UserMessage from '../user-message/index'\nimport JoinMessage from '../join-message/index'\nimport RichText from '@/components/base/rich-text/index'\nexport default {\n  name: 'MessageBox',\n  components: {\n    UserMessage,\n    JoinMessage,\n    RichText\n  },\n  computed: {\n    ...mapGetters({\n      selectedRoom: 'getSelectedRoom',\n      userId: 'getUserId',\n      userName: 'getUserName',\n      messageList: 'getMessageList',\n      isUpdate: 'getUpdate',\n      avatarImage: 'getAvatarImage'\n    })\n  },\n  watch: {\n    selectedRoom () {\n      this.setMessageContentScroll()\n    },\n    isUpdate () {\n      if (this.isUpdate) {\n        this.$forceUpdate()\n        this.updateComplete()\n        this.setMessageContentScroll()\n      }\n    }\n  },\n  methods: {\n    ...mapActions([\n      'updateComplete',\n      'userInput'\n    ]),\n    setMessageContentScroll () {\n      this.$nextTick(() => {\n        const messageContent = document.getElementById('messageContent')\n        if (messageContent) {\n          if (messageContent.scrollHeight > messageContent.clientHeight) {\n            messageContent.scrollTop = messageContent.scrollHeight\n          }\n        }\n      })\n    },\n    sendMessage (message) {\n      const messageId = Number(new Date())\n      const messageContext = {\n        user: {\n          id: this.userId,\n          name: this.userName,\n          avatarImage: this.avatarImage\n        },\n        roomId: this.selectedRoom.id,\n        id: messageId,\n        message,\n        loading: true,\n        type: 'input'\n      }\n      const request = {\n        userId: this.userId,\n        roomId: this.selectedRoom.id,\n        id: messageId,\n        message,\n        type: 'input'\n      }\n      this.userInput(messageContext)\n      this.$socket.emit('user_send_message', request)\n    }\n  }\n}\n```\n\n后端。接收到请求后，完成插入数据库处理并通过 received 事件返回给前端\n\n```python\n# /backend/blueprint/socketio.py\n@socketio.on('user_send_message', namespace='/chatroom')\ndef user_input(message):\n    \"\"\"获取用户输入\n    \"\"\"\n    userId = message['userId']\n    user = User.query.filter_by(id=message['userId']).first()\n    if user:\n        response = {\n            'user': {\n                'id': user.id,\n                'name': user.username,\n                'avatarImage': user.avatar_image,\n            },\n            'message': message['message'],\n            'roomId': message['roomId'],\n            'id': message['id'],\n            'type': message['type'],\n            'time': datetime.utcnow().isoformat(),\n        }\n        roomRecord = RoomRecord(content=message['message'], user_id=user.id, room_id=message['roomId'])\n        db.session.add(roomRecord)\n        db.session.commit()\n        socketio.emit('received', response,\n                        namespace='/chatroom',\n                        room=message['roomId'])\n```\n\n前端 vuex 的 room 模块接收\n\n```js\n// /fronted/src/store/module/room.js\nexport default {\n  action: {\n    updateComplete ({ commit }) {\n      commit('setUpdate', false)\n    },\n    SOCKET_received ({ state, rootState, commit }, responseData) {\n      const messageList = state.messageList\n      const user = rootState.user\n      responseData.time = normalizeTimeDetail(responseData.time)\n      if (user.userId === responseData.user.id && responseData.type !== 'join') {\n        for (let i = messageList[responseData.roomId].length 1; i > 0; i--) {\n          if (messageList[responseData.roomId][i].user.id === user.userId && responseData.id === messageList[responseData.roomId][i].id) {\n            messageList[responseData.roomId][i].loading = false\n            messageList[responseData.roomId][i].time = responseData.time\n            break\n          }\n        }\n        if (!state.update) {\n          commit('setUpdate', true)\n        }\n      } else {\n        if (!messageList[responseData.roomId]) {\n          messageList[responseData.roomId] = []\n        }\n        messageList[responseData.roomId].push(responseData)\n        if (!state.update) {\n          commit('setUpdate', state.selectedRoom ? responseData.roomId === state.selectedRoom.id : false)\n        }\n      }\n      commit('setMessageList', messageList)\n    }\n  }\n}\n```\n\n## 总结\n\n说到这里其实也说完了重点的地方了，有兴趣可以看看源码。第一次写文章，有不足的地方请大佬们多多指点。\n\n## 参考连接\n\n- [1] <https://www.runoob.com/html/html5-websocket.html>\n- [2] <https://www.npmjs.com/package/vue-socket.io>\n- [3] <https://flask-socketio.readthedocs.io/en/latest/>\n","slug":"socketio实现服务器推送（demo实现一个聊天室）","published":1,"updated":"2023-09-23T03:40:32.475Z","_id":"clmvgqo5b0001xpyhbmmcdhku","comments":1,"layout":"post","photos":[],"link":"","content":"<p>demo 演示地址：<a href=\"http://chat.lstmxx.cn/\">http://chat.lstmxx.cn</a></p>\n<p>github 地址：<a href=\"https://github.com/Lstmxx/chatroom\">https://github.com/Lstmxx/chatroom</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>服务端推送是一种服务器主动给客户端发送的技术，主要用于实时对客户端进行消息推送，如天气预报、聊天功能等。</p>\n<h3 id=\"HTTP-1-x\"><a href=\"#HTTP-1-x\" class=\"headerlink\" title=\"HTTP 1.x\"></a>HTTP 1.x</h3><p>在 websocket api 出现之前，由于 http1.x 的缺陷，导致通信只能由客户端发起，用户想要获取到实时数据变化，就要不停的向服务器发送请求，这种方法我们一般称为轮询。这种方法在 web 端可以一用，但是在移动端就不行了，想一想你的 app 不停的消耗你的流量发请求到服务器，这会导致用户流量的大量浪费，体现极其差。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">axios</span>()<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTTP-2-0\"><a href=\"#HTTP-2-0\" class=\"headerlink\" title=\"HTTP 2.0\"></a>HTTP 2.0</h3><p>为了解决这一问题，终于在 http2.0 协议里面增加了一个新特性——服务器推送。而 Html5 根据这一特性提供了一种在单个 TCP 连接上进行全双工通讯的协议——<a href=\"https://www.runoob.com/html/html5-websocket.html\">WebSocket</a>。</p>\n<h3 id=\"Socketio\"><a href=\"#Socketio\" class=\"headerlink\" title=\"Socketio\"></a>Socketio</h3><h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>如果客户端想要使用 websocket 接受服务器推送的话，Socketio 是一个不错的选择。Socket.io 将 Websocket、轮询机制以及其它的实时通信方式（ajax 等）封装成了通用的接口，并且在服务端也实现了这些实时机制的相应代码。所以，使用 Socket.io 便不需要担心浏览器兼容问题。</p>\n<h4 id=\"namespace-和-room\"><a href=\"#namespace-和-room\" class=\"headerlink\" title=\"namespace 和 room\"></a>namespace 和 room</h4><p>socketio 有两个重要的概念——namespace 和 room。两者关系是 namespace 包含 room。举个例子，你要通知北小区的 4 座的所有用户交管理费，你先找到了北小区（namespace）然后再找到 4 座（room），最后给 4 座里面的业主发送交管理费消息。</p>\n<h2 id=\"Socketio-的安装与使用\"><a href=\"#Socketio-的安装与使用\" class=\"headerlink\" title=\"Socketio 的安装与使用\"></a>Socketio 的安装与使用</h2><h3 id=\"Vue-中使用-Socketio\"><a href=\"#Vue-中使用-Socketio\" class=\"headerlink\" title=\"Vue 中使用 Socketio\"></a>Vue 中使用 Socketio</h3><p>在 Vue 中有两种方式使用 Socketio</p>\n<h4 id=\"直接使用官方包\"><a href=\"#直接使用官方包\" class=\"headerlink\" title=\"直接使用官方包\"></a>直接使用官方包</h4><p>下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.io</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里的namespace和后端设置的namespace是一样的</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = io.<span class=\"title function_\">connect</span>(<span class=\"string\">`http://<span class=\"subst\">$&#123;域名&#125;</span>/<span class=\"subst\">$&#123;namespace&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// on函数是监听函数，接受两个参数，第一个是订阅名，第二个是接受订阅信息的回调</span></span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;chatMessage&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;response&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connect&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// emit是发送函数，第一个参数是后端的订阅名，第二个是数据，可以是任意类型</span></span><br><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user_input&#x27;</span>, <span class=\"string\">&#x27;wdnmd&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用-VueSocketio\"><a href=\"#使用-VueSocketio\" class=\"headerlink\" title=\"使用 VueSocketio\"></a>使用 VueSocketio</h4><p>相较于 socket.io-client，VueSocketio 自带支持在 vuex 中使用，这使得多组件共用消息更加便利。npm 地址：<a href=\"https://www.npmjs.com/package/vue-socket.io\">https://www.npmjs.com/package/vue-socket.io</a> 。</p>\n<p>下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-socket.io</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueSocketio</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-socket.io&#x27;</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">VueSocketio</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">connection</span>: <span class=\"string\">`/<span class=\"subst\">$&#123;namespace&#125;</span>`</span>,</span><br><span class=\"line\">  <span class=\"comment\">/* 推荐使用vuex引入，方便多组件状态共享 */</span></span><br><span class=\"line\">  <span class=\"attr\">vuex</span>: &#123;</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">actionPrefix</span>: <span class=\"string\">&#x27;SOCKET_&#x27;</span> <span class=\"comment\">// 前缀，为了区分vuex文件中响应函数和普通函数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure>\n\n<p>单组件使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在需要监听的vue引入</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">sockets</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">connect</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;socket connected&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">received</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n\n<p>vuex 中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /store/module/room.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// responseData 为响应数据</span></span><br><span class=\"line\">SOCKET_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">SOCKET_join_one (&#123;&#125;, responseData) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flask-中使用-Socketio\"><a href=\"#flask-中使用-Socketio\" class=\"headerlink\" title=\"flask 中使用 Socketio\"></a>flask 中使用 Socketio</h3><p>flask 中使用 socketio 主要用到 Flask-SocketIO 这个包，官网地址：<a href=\"https://flask-socketio.readthedocs.io/en/latest/\">https://flask-socketio.readthedocs.io/en/latest/</a> 。</p>\n<p>下载</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install flask-socketio</span><br></pre></td></tr></table></figure>\n\n<p>使用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_cors <span class=\"keyword\">import</span> CORS <span class=\"comment\"># 跨域</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_socketio <span class=\"keyword\">import</span> SocketIO, emit, join_room, leave_room, close_room, rooms, disconnect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化socketio</span></span><br><span class=\"line\">socketio = SocketIO(app, cors_allowed_origins=<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第一个参数为事件名，第二个为namespace</span></span><br><span class=\"line\"><span class=\"comment\"># 通过监听namespace下的事件做出响应，这里的namespace和前面前端定义的namespace要相同</span></span><br><span class=\"line\"><span class=\"comment\"># message为请求参数</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;test_input&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"comment\"># do someting</span></span><br><span class=\"line\">    socketio.emit(<span class=\"string\">&#x27;test_received&#x27;</span>, <span class=\"string\">&#x27;收到啦&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在 app.py 中引入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/app.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> blueprint.socketio <span class=\"keyword\">import</span> app, socketio, db</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    socketio.run(app, host=<span class=\"string\">&quot;0.0.0.0&quot;</span>, port=<span class=\"number\">4999</span>, debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h3><p>既然是前后端分离，那当然要使用 nginx 啦~</p>\n<p>配置 chatroom.conf</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> chat_frontend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8181</span>; <span class=\"comment\"># 前端工程运行的地址</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">upstream</span> chat_backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:4999</span>; <span class=\"comment\"># 后端工程运行的地址</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>; <span class=\"comment\"># 监听端口</span></span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  www.chatroom.com; <span class=\"comment\">#域名</span></span><br><span class=\"line\">        <span class=\"section\">location</span><span class=\"regexp\"> ^~</span> /api &#123; <span class=\"comment\"># 普通接口路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Forwarded-Server <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_backend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"section\">location</span> /socket.io &#123; <span class=\"comment\"># socketio的路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_buffering</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Upgrade <span class=\"variable\">$http_upgrade</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Connection <span class=\"string\">&quot;Upgrade&quot;</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_backend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123; <span class=\"comment\"># 前端路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Forwarded-Server <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_frontend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置 host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">···</span><br><span class=\"line\">127.0.0.1 www.chatroom.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"通信\"><a href=\"#通信\" class=\"headerlink\" title=\"通信\"></a>通信</h3><p>前面把 flask 和 vue 都配置好了，那么先测试一下。</p>\n<p>整个流程非常简单，流程图如下：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe93449800d38~tplv-t2oaga2asx-image.image\"></p>\n<h4 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h4><p>获取用户输入后，向目标事件发送数据。这里我自己实现了一个简陋的 rich-text，如果不追求效果直接用 input 标签就完事了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /src/components/chat-room/message-box/message-box.vue</span></span><br><span class=\"line\">···</span><br><span class=\"line\">sendMessage (message) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 第一个参数为事件名，第二个参数为要发送的数据</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;test_input&#x27;</span>, message)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 vuex 中监听 received 事件获取服务器返回消息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /src/store/module/room.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    SOCKET_test_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(responseData)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"flask\"><a href=\"#flask\" class=\"headerlink\" title=\"flask\"></a>flask</h4><p>后端这边就非常简单了，增加一个消息回调函数就好了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_socketio <span class=\"keyword\">import</span> SocketIO, emit</span><br><span class=\"line\">socketio = SocketIO(app, cors_allowed_origins=<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;test_input&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"comment\"># do someting</span></span><br><span class=\"line\">    socketio.emit(<span class=\"string\">&#x27;test_received&#x27;</span>, <span class=\"string\">&#x27;收到啦&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 或者</span></span><br><span class=\"line\">    <span class=\"comment\"># emit(&#x27;test_received&#x27;, &#x27;收到啦&#x27;, namespace=&#x27;/chatroom&#x27;)</span></span><br></pre></td></tr></table></figure>\n\n<p>要注意的是，这个 emit 没有指定某一个 room，所以会广播给在这个 namespace 下的所有人。</p>\n<p>打开谷歌浏览器，效果如下：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe94c8b5e4c45~tplv-t2oaga2asx-image.image\"></p>\n<h2 id=\"实现聊天室小-demo\"><a href=\"#实现聊天室小-demo\" class=\"headerlink\" title=\"实现聊天室小 demo\"></a>实现聊天室小 demo</h2><h3 id=\"构思\"><a href=\"#构思\" class=\"headerlink\" title=\"构思\"></a>构思</h3><p>一个简单的聊天室肯定会涉及到用户，房间和消息记录。</p>\n<h3 id=\"实现登录页面\"><a href=\"#实现登录页面\" class=\"headerlink\" title=\"实现登录页面\"></a>实现登录页面</h3><p>首先解决一下用户，最核心的是登录。先建一个用户表。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `<span class=\"keyword\">user</span>`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `<span class=\"keyword\">user</span>`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `username` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `password` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `avatar_image` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_id_set` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci COMMENT <span class=\"string\">&#x27;每个用户所参加的房间&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_user_username`(`username`) <span class=\"keyword\">USING</span> BTREE</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">5</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br></pre></td></tr></table></figure>\n\n<p>封装一下登录接口，使用 vuex 保存登录状态。因为关闭页面后 vuex 会清掉 token 使用 cookie 来保存（axios 的封装就不说了，不是重点）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/requestApi.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">baseLogin</span> (config) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: config.<span class=\"property\">url</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: config.<span class=\"property\">data</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.<span class=\"title function_\">request</span>(request)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/request.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">login</span> (config) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">baseLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(response.<span class=\"property\">data</span>.<span class=\"property\">data</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>保存 token</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/utility/token.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Cookies</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;js-cookie&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">TOKEN_KEY</span> = <span class=\"string\">&#x27;token&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">setToken</span> = (<span class=\"params\">token</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Cookies</span>.<span class=\"title function_\">set</span>(<span class=\"variable constant_\">TOKEN_KEY</span>, token, &#123; <span class=\"attr\">expires</span>: <span class=\"number\">1</span> &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">getToken</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> token = <span class=\"title class_\">Cookies</span>.<span class=\"title function_\">get</span>(<span class=\"variable constant_\">TOKEN_KEY</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token !== <span class=\"string\">&#x27;null&#x27;</span>) <span class=\"keyword\">return</span> token</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编写 vuex 的 user 模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/user.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken, setToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../../libs/utility/token&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; login, getUserInfo, logout &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/libs/request&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">token</span>: <span class=\"title function_\">getToken</span>(),</span><br><span class=\"line\">    <span class=\"attr\">userName</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">userId</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">avatarImage</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    getToken (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">token</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getUserName (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">userName</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getUserId (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">userId</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAvatarImage (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">avatarImage</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    setToken (state, token) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">token</span> = token</span><br><span class=\"line\">      <span class=\"title function_\">setToken</span>(token)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setUserName (state, name) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">userName</span> = name</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setUserId (state, userId) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">userId</span> = userId</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAvatarImage (state, avatarImage) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">avatarImage</span> = avatarImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    handleLogin (&#123; commit &#125;, config) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">login</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, responseData.<span class=\"property\">token</span>)</span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>(responseData)</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    loadUserInfo (&#123; commit &#125;) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getUserInfo</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, <span class=\"title function_\">getToken</span>())</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUserName&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUserId&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">userId</span>)</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setAvatarImage&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">avatar_image</span>)</span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>(responseData)</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 login 页面中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/login/login.vue</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapActions</span>([</span><br><span class=\"line\">      <span class=\"string\">&#x27;handleLogin&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;loadUserInfo&#x27;</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    checkCapslock (e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; key &#125; = e</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">capsTooltip</span> = key &amp;&amp; key.<span class=\"property\">length</span> === <span class=\"number\">1</span> &amp;&amp; (key &gt;= <span class=\"string\">&#x27;A&#x27;</span> &amp;&amp; key &lt;= <span class=\"string\">&#x27;Z&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 登录，成功后跳转</span></span><br><span class=\"line\">    onLogin () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">loginForm</span>.<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">show</span>()</span><br><span class=\"line\">          <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">loginForm</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">name</span>: <span class=\"string\">&#x27;ChatRoom&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 注册，成功后回调登录</span></span><br><span class=\"line\">    onRegister () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">loginForm</span>.<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">show</span>()</span><br><span class=\"line\">          <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/register&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">loginForm</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">onLogin</span>()</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端方面，可以看看/backend/blueprint/user.py。ui 方面就不说了，不是重点。</p>\n<h3 id=\"实现房间的创建，展示和加入功能\"><a href=\"#实现房间的创建，展示和加入功能\" class=\"headerlink\" title=\"实现房间的创建，展示和加入功能\"></a>实现房间的创建，展示和加入功能</h3><p>对于房间来说，肯定要有创建和加入这两个功能的，下面先说说创建。</p>\n<p>先建个表吧</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `room`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `room`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `owner` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;房间创建人&#x27;</span>,</span><br><span class=\"line\">  `user_set` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `description` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `update_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `avatar_image` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_hash_id` <span class=\"type\">varchar</span>(<span class=\"number\">32</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_avatar_image`(`avatar_image`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_create_time`(`create_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_name`(`name`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_owner`(`owner`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_update_time`(`update_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `room_ibfk_1` <span class=\"keyword\">FOREIGN</span> KEY (`owner`) <span class=\"keyword\">REFERENCES</span> `<span class=\"keyword\">user</span>` (`id`) <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> RESTRICT <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> RESTRICT</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">38</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建房间\"><a href=\"#创建房间\" class=\"headerlink\" title=\"创建房间\"></a>创建房间</h4><p>首先先明确创建房间需要什么数据，我的想法是需要房间头像，房间名和房间描述。</p>\n<p>前端主要是获取了房间头像、房间名和房间描述后发送请求到后端。这里的 upLoadFile 是自己模仿 element 来写的组件，有兴趣可以在 /fronted/src/components/base/up-load-file/up-load-file.vue 查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// /fronted/src/components/chat-room/room-list/room-list.vue</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">    &lt;el-dialog title=&quot;创建房间&quot; :visible.sync=&quot;createRoomDialog&quot;&gt;</span><br><span class=\"line\">      &lt;el-form :model=&quot;createRoom&quot; :rules=&quot;createRules&quot; ref=&quot;createRoomForm&quot;&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间名&quot; prop=&quot;hashId&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;createRoom.name&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间描述&quot; prop=&quot;description&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;createRoom.description&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间头像&quot; prop=&quot;avatarImage&quot;&gt;</span><br><span class=\"line\">          &lt;upLoadFile :maxImageNum=&quot;1&quot; @on-change=&quot;getFilePath&quot;/&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">      &lt;/el-form&gt;</span><br><span class=\"line\">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class=\"line\">        &lt;el-button @click=&quot;createRoomDialog = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button type=&quot;primary&quot; @click=&quot;handleCreateRoom&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-dialog&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; post &#125; from &#x27;@/libs/request&#x27;</span><br><span class=\"line\">import upLoadFile from &#x27;@/components/base/up-load-file&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;RoomList&#x27;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    roomList: &#123;</span><br><span class=\"line\">      default: () =&gt; [],</span><br><span class=\"line\">      type: Array</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    upLoadFile</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">      createRoom: &#123;</span><br><span class=\"line\">        name: &#x27;&#x27;,</span><br><span class=\"line\">        description: &#x27;&#x27;,</span><br><span class=\"line\">        avatarImage: &#x27;&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  method: &#123;</span><br><span class=\"line\">    getFilePath (imageList) &#123;</span><br><span class=\"line\">      this.createRoom.avatarImage = imageList[0].base64Path</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleCreateRoom () &#123;</span><br><span class=\"line\">      this.$refs.createRoomForm.validate(valid =&gt; &#123;</span><br><span class=\"line\">        if (valid) &#123;</span><br><span class=\"line\">          this.$Loading.show()</span><br><span class=\"line\">          const config = &#123;</span><br><span class=\"line\">            url: &#x27;/room/create&#x27;,</span><br><span class=\"line\">            data: this.createRoom</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          post(config).then((responseData) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.createRoom.name = &#x27;&#x27;</span><br><span class=\"line\">            this.createRoomDialog = false</span><br><span class=\"line\">            this.createRoom = &#123;</span><br><span class=\"line\">              name: &#x27;&#x27;,</span><br><span class=\"line\">              description: &#x27;&#x27;,</span><br><span class=\"line\">              avatarImage: &#x27;&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            this.$message(&#123;</span><br><span class=\"line\">              message: &#x27;创建成功&#x27;,</span><br><span class=\"line\">              type: &#x27;success&#x27;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            this.$emit(&#x27;create-room-success&#x27;, responseData.room)</span><br><span class=\"line\">          &#125;).catch((err) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.createRoomDialog = false</span><br><span class=\"line\">            console.log(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>后端这边就简单了，直接插入数据库。插入时候使用 base64 来生成房间码，之后加入房间要用。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/room.py</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"meta\">@room_bp.route(<span class=\"params\"><span class=\"string\">&#x27;/api/room/create&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@verify_token</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">room_create</span>(<span class=\"params\">tokenData</span>):</span><br><span class=\"line\">    values = request.get_json()</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        room = Room(name=values[<span class=\"string\">&#x27;name&#x27;</span>],</span><br><span class=\"line\">                    description=values[<span class=\"string\">&#x27;description&#x27;</span>],</span><br><span class=\"line\">                    user_set=<span class=\"built_in\">str</span>(tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]),</span><br><span class=\"line\">                    owner=user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                    avatar_image=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        db.session.add(room)</span><br><span class=\"line\">        db.session.flush()</span><br><span class=\"line\">        room.room_hash_id = hashlib.md5(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;room.<span class=\"built_in\">id</span>&#125;</span><span class=\"subst\">&#123;time.time()&#125;</span>&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class=\"line\">        room.user_set = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;room.user_set&#125;</span>,<span class=\"subst\">&#123;user.<span class=\"built_in\">id</span>&#125;</span>&#x27;</span> <span class=\"keyword\">if</span> room.user_set <span class=\"keyword\">else</span> user.<span class=\"built_in\">id</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> values[<span class=\"string\">&#x27;avatarImage&#x27;</span>]:</span><br><span class=\"line\">            avatartImageList = values[<span class=\"string\">&#x27;avatarImage&#x27;</span>].split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">            suffix = avatartImageList[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            filename = <span class=\"string\">f&#x27;room_avatar/<span class=\"subst\">&#123;room.room_hash_id&#125;</span>.<span class=\"subst\">&#123;suffix&#125;</span>&#x27;</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(filename)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">f&#x27;media/<span class=\"subst\">&#123;filename&#125;</span>&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">                f.write(base64.b64decode(avatartImageList[<span class=\"number\">1</span>]))</span><br><span class=\"line\">            room.avatar_image = filename</span><br><span class=\"line\">        user.room_id_set = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;user.room_id_set&#125;</span>,<span class=\"subst\">&#123;room.<span class=\"built_in\">id</span>&#125;</span>&#x27;</span> <span class=\"keyword\">if</span> user.room_id_set <span class=\"keyword\">else</span> room.<span class=\"built_in\">id</span></span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;data&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;room&#x27;</span>: JSONHelper.model_to_json(room)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;成功&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;data&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;失败失败&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"展示房间\"><a href=\"#展示房间\" class=\"headerlink\" title=\"展示房间\"></a>展示房间</h4><p>这个其实就是拉一个房间列表。要注意的是前端获取到房间列表后，要调用 join_all 这个事件监听这些房间的消息。</p>\n<p>后端</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@room_bp.route(<span class=\"params\"><span class=\"string\">&#x27;/api/room/list&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@verify_token</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">room_list</span>(<span class=\"params\">tokenData</span>):</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        roomlist = Room.query.<span class=\"built_in\">filter</span>(Room.<span class=\"built_in\">id</span>.in_(user.room_id_set.split(<span class=\"string\">&#x27;,&#x27;</span>))).<span class=\"built_in\">all</span>() <span class=\"keyword\">if</span> user.room_id_set <span class=\"keyword\">else</span> []</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;data&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;roomList&#x27;</span>: JSONHelper.to_json_list(roomlist)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;成功&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;data&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;失败失败&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>前端这边先在 room 模块里编写加载房间列表函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/room.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\">loadRoomList (&#123; commit &#125;) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/room/list&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">get</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setRoomList&#x27;</span>, responseData.<span class=\"property\">roomList</span>)</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(responseData.<span class=\"property\">roomList</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 chat-room 页面调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/chat-room/chat-room.vue</span></span><br><span class=\"line\">mounted () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">loadRoomList</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">roomList</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">      <span class=\"attr\">roomList</span>: roomList.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">room</span> =&gt;</span> room.<span class=\"property\">id</span>),</span><br><span class=\"line\">      <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;join_all&#x27;</span>, request)</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端响应 join_all 事件，调用 join_room 加入用户所在的所有房间。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;join_all&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">join_chats</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;加入多个聊天室</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=message[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user <span class=\"keyword\">and</span> <span class=\"built_in\">len</span>(message[<span class=\"string\">&#x27;roomList&#x27;</span>]) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> roomId <span class=\"keyword\">in</span> message[<span class=\"string\">&#x27;roomList&#x27;</span>]:</span><br><span class=\"line\">            join_room(roomId)</span><br><span class=\"line\">            emit(<span class=\"string\">&#x27;received&#x27;</span>, &#123; <span class=\"comment\"># 发送加入消息</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;roomId&#x27;</span>: roomId,</span><br><span class=\"line\">                <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;join&#x27;</span></span><br><span class=\"line\">            &#125;, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>, room=roomId)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"加入房间\"><a href=\"#加入房间\" class=\"headerlink\" title=\"加入房间\"></a>加入房间</h4><p>获取对应的房间码后，输入加入就 OK 了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// /fronted/src/components/chat-room/room-list/room-list.vue</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">    &lt;el-dialog title=&quot;加入房间&quot; :visible.sync=&quot;joinRoomDialog&quot;&gt;</span><br><span class=\"line\">      &lt;el-form :model=&quot;joinRoom&quot; :rules=&quot;joinRules&quot; ref=&quot;joinRoomForm&quot;&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间号&quot; prop=&quot;hashId&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;joinRoom.hashId&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">      &lt;/el-form&gt;</span><br><span class=\"line\">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class=\"line\">        &lt;el-button @click=&quot;joinRoomDialog = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button type=&quot;primary&quot; @click=&quot;handleJoinRoom&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-dialog&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; post &#125; from &#x27;@/libs/request&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;RoomList&#x27;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    roomList: &#123;</span><br><span class=\"line\">      default: () =&gt; [],</span><br><span class=\"line\">      type: Array</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">      joinRoom: &#123;</span><br><span class=\"line\">        hashId: &#x27;&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  method: &#123;</span><br><span class=\"line\">    handleJoinRoom () &#123;</span><br><span class=\"line\">      this.$refs.joinRoomForm.validate(valid =&gt; &#123;</span><br><span class=\"line\">        if (valid) &#123;</span><br><span class=\"line\">          this.$Loading.show()</span><br><span class=\"line\">          const config = &#123;</span><br><span class=\"line\">            url: &#x27;/room/join&#x27;,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">              roomIdHash: this.joinRoom.hashId</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          post(config).then((responseData) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.joinRoomDialog = false</span><br><span class=\"line\">            this.$message(&#123;</span><br><span class=\"line\">              message: &#x27;加入成功&#x27;,</span><br><span class=\"line\">              type: &#x27;success&#x27;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            this.$emit(&#x27;create-room-success&#x27;, responseData.room)</span><br><span class=\"line\">          &#125;).catch((err) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            console.log(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>加入成功后，和创建一样，调用 join_one_chat 事件来加入房间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/chat-room/chat-room.vue</span></span><br><span class=\"line\">handleCreateJoinRoom (room) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> roomList = <span class=\"variable language_\">this</span>.<span class=\"property\">roomList</span></span><br><span class=\"line\">  roomList.<span class=\"title function_\">push</span>(room)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setRoomList&#x27;</span>, roomList)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">    <span class=\"attr\">roomId</span>: room.<span class=\"property\">id</span>,</span><br><span class=\"line\">    <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;join_one_chat&#x27;</span>, request)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端响应回调。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;join_one_chat&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">join_one_chat</span>(<span class=\"params\">join</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;加入聊天室</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    room = Room.query.filter_by(<span class=\"built_in\">id</span>=join[<span class=\"string\">&#x27;roomId&#x27;</span>]).first()</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=join[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(join)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> room <span class=\"keyword\">and</span> user:</span><br><span class=\"line\">        join_room(room.<span class=\"built_in\">id</span>)</span><br><span class=\"line\">        emit(<span class=\"string\">&#x27;received&#x27;</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;roomId&#x27;</span>: room.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;join&#x27;</span></span><br><span class=\"line\">        &#125;, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>, room=room)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消息记录的发送与保存\"><a href=\"#消息记录的发送与保存\" class=\"headerlink\" title=\"消息记录的发送与保存\"></a>消息记录的发送与保存</h3><p>先建个表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> NAMES utf8mb4;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-----------------------------</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"keyword\">Table</span> structure <span class=\"keyword\">for</span> room_record</span><br><span class=\"line\"><span class=\"comment\">-----------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `room_record`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `room_record`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `content` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `user_id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_record_create_time`(`create_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_record_room_id`(`room_id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `room_record_ibfk_1` <span class=\"keyword\">FOREIGN</span> KEY (`room_id`) <span class=\"keyword\">REFERENCES</span> `room` (`id`) <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> RESTRICT <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> RESTRICT</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">12</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>用户选择了对应房间，在对应房间中发送消息就 OK 了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/components/chat-room/message-box/message-box.vue</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters, mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> util <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/libs/utility/util.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserMessage</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../user-message/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">JoinMessage</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../join-message/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RichText</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/base/rich-text/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;MessageBox&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    <span class=\"title class_\">UserMessage</span>,</span><br><span class=\"line\">    <span class=\"title class_\">JoinMessage</span>,</span><br><span class=\"line\">    <span class=\"title class_\">RichText</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapGetters</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">selectedRoom</span>: <span class=\"string\">&#x27;getSelectedRoom&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">userId</span>: <span class=\"string\">&#x27;getUserId&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;getUserName&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">messageList</span>: <span class=\"string\">&#x27;getMessageList&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">isUpdate</span>: <span class=\"string\">&#x27;getUpdate&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">avatarImage</span>: <span class=\"string\">&#x27;getAvatarImage&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">    selectedRoom () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">setMessageContentScroll</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    isUpdate () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isUpdate</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.$forceUpdate()</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateComplete</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">setMessageContentScroll</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapActions</span>([</span><br><span class=\"line\">      <span class=\"string\">&#x27;updateComplete&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;userInput&#x27;</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    setMessageContentScroll () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> messageContent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;messageContent&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageContent) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (messageContent.<span class=\"property\">scrollHeight</span> &gt; messageContent.<span class=\"property\">clientHeight</span>) &#123;</span><br><span class=\"line\">            messageContent.<span class=\"property\">scrollTop</span> = messageContent.<span class=\"property\">scrollHeight</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sendMessage (message) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageId = <span class=\"title class_\">Number</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageContext = &#123;</span><br><span class=\"line\">        <span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">id</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userName</span>,</span><br><span class=\"line\">          <span class=\"attr\">avatarImage</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">avatarImage</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">roomId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span>,</span><br><span class=\"line\">        <span class=\"attr\">id</span>: messageId,</span><br><span class=\"line\">        message,</span><br><span class=\"line\">        <span class=\"attr\">loading</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;input&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">        <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span>,</span><br><span class=\"line\">        <span class=\"attr\">roomId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span>,</span><br><span class=\"line\">        <span class=\"attr\">id</span>: messageId,</span><br><span class=\"line\">        message,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;input&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">userInput</span>(messageContext)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user_send_message&#x27;</span>, request)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端。接收到请求后，完成插入数据库处理并通过 received 事件返回给前端</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;user_send_message&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取用户输入</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    userId = message[<span class=\"string\">&#x27;userId&#x27;</span>]</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=message[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        response = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: message[<span class=\"string\">&#x27;message&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;roomId&#x27;</span>: message[<span class=\"string\">&#x27;roomId&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;id&#x27;</span>: message[<span class=\"string\">&#x27;id&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span>: message[<span class=\"string\">&#x27;type&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;time&#x27;</span>: datetime.utcnow().isoformat(),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        roomRecord = RoomRecord(content=message[<span class=\"string\">&#x27;message&#x27;</span>], user_id=user.<span class=\"built_in\">id</span>, room_id=message[<span class=\"string\">&#x27;roomId&#x27;</span>])</span><br><span class=\"line\">        db.session.add(roomRecord)</span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        socketio.emit(<span class=\"string\">&#x27;received&#x27;</span>, response,</span><br><span class=\"line\">                        namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>,</span><br><span class=\"line\">                        room=message[<span class=\"string\">&#x27;roomId&#x27;</span>])</span><br></pre></td></tr></table></figure>\n\n<p>前端 vuex 的 room 模块接收</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/room.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">action</span>: &#123;</span><br><span class=\"line\">    updateComplete (&#123; commit &#125;) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    SOCKET_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageList = state.<span class=\"property\">messageList</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> user = rootState.<span class=\"property\">user</span></span><br><span class=\"line\">      responseData.<span class=\"property\">time</span> = <span class=\"title function_\">normalizeTimeDetail</span>(responseData.<span class=\"property\">time</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (user.<span class=\"property\">userId</span> === responseData.<span class=\"property\">user</span>.<span class=\"property\">id</span> &amp;&amp; responseData.<span class=\"property\">type</span> !== <span class=\"string\">&#x27;join&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = messageList[responseData.<span class=\"property\">roomId</span>].<span class=\"property\">length</span> <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">user</span>.<span class=\"property\">id</span> === user.<span class=\"property\">userId</span> &amp;&amp; responseData.<span class=\"property\">id</span> === messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">            messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">loading</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">            messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">time</span> = responseData.<span class=\"property\">time</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!state.<span class=\"property\">update</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!messageList[responseData.<span class=\"property\">roomId</span>]) &#123;</span><br><span class=\"line\">          messageList[responseData.<span class=\"property\">roomId</span>] = []</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        messageList[responseData.<span class=\"property\">roomId</span>].<span class=\"title function_\">push</span>(responseData)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!state.<span class=\"property\">update</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, state.<span class=\"property\">selectedRoom</span> ? responseData.<span class=\"property\">roomId</span> === state.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span> : <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setMessageList&#x27;</span>, messageList)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>说到这里其实也说完了重点的地方了，有兴趣可以看看源码。第一次写文章，有不足的地方请大佬们多多指点。</p>\n<h2 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h2><ul>\n<li>[1] <a href=\"https://www.runoob.com/html/html5-websocket.html\">https://www.runoob.com/html/html5-websocket.html</a></li>\n<li>[2] <a href=\"https://www.npmjs.com/package/vue-socket.io\">https://www.npmjs.com/package/vue-socket.io</a></li>\n<li>[3] <a href=\"https://flask-socketio.readthedocs.io/en/latest/\">https://flask-socketio.readthedocs.io/en/latest/</a></li>\n</ul>\n","site":{"data":{}},"cover":false,"excerpt":"","more":"<p>demo 演示地址：<a href=\"http://chat.lstmxx.cn/\">http://chat.lstmxx.cn</a></p>\n<p>github 地址：<a href=\"https://github.com/Lstmxx/chatroom\">https://github.com/Lstmxx/chatroom</a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>服务端推送是一种服务器主动给客户端发送的技术，主要用于实时对客户端进行消息推送，如天气预报、聊天功能等。</p>\n<h3 id=\"HTTP-1-x\"><a href=\"#HTTP-1-x\" class=\"headerlink\" title=\"HTTP 1.x\"></a>HTTP 1.x</h3><p>在 websocket api 出现之前，由于 http1.x 的缺陷，导致通信只能由客户端发起，用户想要获取到实时数据变化，就要不停的向服务器发送请求，这种方法我们一般称为轮询。这种方法在 web 端可以一用，但是在移动端就不行了，想一想你的 app 不停的消耗你的流量发请求到服务器，这会导致用户流量的大量浪费，体现极其差。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setInterval</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">axios</span>()<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;, <span class=\"number\">3000</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"HTTP-2-0\"><a href=\"#HTTP-2-0\" class=\"headerlink\" title=\"HTTP 2.0\"></a>HTTP 2.0</h3><p>为了解决这一问题，终于在 http2.0 协议里面增加了一个新特性——服务器推送。而 Html5 根据这一特性提供了一种在单个 TCP 连接上进行全双工通讯的协议——<a href=\"https://www.runoob.com/html/html5-websocket.html\">WebSocket</a>。</p>\n<h3 id=\"Socketio\"><a href=\"#Socketio\" class=\"headerlink\" title=\"Socketio\"></a>Socketio</h3><h4 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h4><p>如果客户端想要使用 websocket 接受服务器推送的话，Socketio 是一个不错的选择。Socket.io 将 Websocket、轮询机制以及其它的实时通信方式（ajax 等）封装成了通用的接口，并且在服务端也实现了这些实时机制的相应代码。所以，使用 Socket.io 便不需要担心浏览器兼容问题。</p>\n<h4 id=\"namespace-和-room\"><a href=\"#namespace-和-room\" class=\"headerlink\" title=\"namespace 和 room\"></a>namespace 和 room</h4><p>socketio 有两个重要的概念——namespace 和 room。两者关系是 namespace 包含 room。举个例子，你要通知北小区的 4 座的所有用户交管理费，你先找到了北小区（namespace）然后再找到 4 座（room），最后给 4 座里面的业主发送交管理费消息。</p>\n<h2 id=\"Socketio-的安装与使用\"><a href=\"#Socketio-的安装与使用\" class=\"headerlink\" title=\"Socketio 的安装与使用\"></a>Socketio 的安装与使用</h2><h3 id=\"Vue-中使用-Socketio\"><a href=\"#Vue-中使用-Socketio\" class=\"headerlink\" title=\"Vue 中使用 Socketio\"></a>Vue 中使用 Socketio</h3><p>在 Vue 中有两种方式使用 Socketio</p>\n<h4 id=\"直接使用官方包\"><a href=\"#直接使用官方包\" class=\"headerlink\" title=\"直接使用官方包\"></a>直接使用官方包</h4><p>下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install socket.io</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> io <span class=\"keyword\">from</span> <span class=\"string\">&#x27;socket.io-client&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这里的namespace和后端设置的namespace是一样的</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> socket = io.<span class=\"title function_\">connect</span>(<span class=\"string\">`http://<span class=\"subst\">$&#123;域名&#125;</span>/<span class=\"subst\">$&#123;namespace&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// on函数是监听函数，接受两个参数，第一个是订阅名，第二个是接受订阅信息的回调</span></span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;chatMessage&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;response&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connect&#x27;</span>, <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// emit是发送函数，第一个参数是后端的订阅名，第二个是数据，可以是任意类型</span></span><br><span class=\"line\">socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user_input&#x27;</span>, <span class=\"string\">&#x27;wdnmd&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用-VueSocketio\"><a href=\"#使用-VueSocketio\" class=\"headerlink\" title=\"使用 VueSocketio\"></a>使用 VueSocketio</h4><p>相较于 socket.io-client，VueSocketio 自带支持在 vuex 中使用，这使得多组件共用消息更加便利。npm 地址：<a href=\"https://www.npmjs.com/package/vue-socket.io\">https://www.npmjs.com/package/vue-socket.io</a> 。</p>\n<p>下载</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-socket.io</span><br></pre></td></tr></table></figure>\n\n<p>引入</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/main.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> store <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./store&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">VueSocketio</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue-socket.io&#x27;</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"title function_\">use</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">VueSocketio</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">connection</span>: <span class=\"string\">`/<span class=\"subst\">$&#123;namespace&#125;</span>`</span>,</span><br><span class=\"line\">  <span class=\"comment\">/* 推荐使用vuex引入，方便多组件状态共享 */</span></span><br><span class=\"line\">  <span class=\"attr\">vuex</span>: &#123;</span><br><span class=\"line\">    store,</span><br><span class=\"line\">    <span class=\"attr\">actionPrefix</span>: <span class=\"string\">&#x27;SOCKET_&#x27;</span> <span class=\"comment\">// 前缀，为了区分vuex文件中响应函数和普通函数</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;))</span><br></pre></td></tr></table></figure>\n\n<p>单组件使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在需要监听的vue引入</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">sockets</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">connect</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;socket connected&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">received</span>: <span class=\"keyword\">function</span> (<span class=\"params\">res</span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n\n<p>vuex 中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /store/module/room.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\">// responseData 为响应数据</span></span><br><span class=\"line\">SOCKET_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">SOCKET_join_one (&#123;&#125;, responseData) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"flask-中使用-Socketio\"><a href=\"#flask-中使用-Socketio\" class=\"headerlink\" title=\"flask 中使用 Socketio\"></a>flask 中使用 Socketio</h3><p>flask 中使用 socketio 主要用到 Flask-SocketIO 这个包，官网地址：<a href=\"https://flask-socketio.readthedocs.io/en/latest/\">https://flask-socketio.readthedocs.io/en/latest/</a> 。</p>\n<p>下载</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install flask-socketio</span><br></pre></td></tr></table></figure>\n\n<p>使用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">···</span><br><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_cors <span class=\"keyword\">import</span> CORS <span class=\"comment\"># 跨域</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask_socketio <span class=\"keyword\">import</span> SocketIO, emit, join_room, leave_room, close_room, rooms, disconnect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化socketio</span></span><br><span class=\"line\">socketio = SocketIO(app, cors_allowed_origins=<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第一个参数为事件名，第二个为namespace</span></span><br><span class=\"line\"><span class=\"comment\"># 通过监听namespace下的事件做出响应，这里的namespace和前面前端定义的namespace要相同</span></span><br><span class=\"line\"><span class=\"comment\"># message为请求参数</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;test_input&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"comment\"># do someting</span></span><br><span class=\"line\">    socketio.emit(<span class=\"string\">&#x27;test_received&#x27;</span>, <span class=\"string\">&#x27;收到啦&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在 app.py 中引入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/app.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> blueprint.socketio <span class=\"keyword\">import</span> app, socketio, db</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    socketio.run(app, host=<span class=\"string\">&quot;0.0.0.0&quot;</span>, port=<span class=\"number\">4999</span>, debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nginx-配置\"><a href=\"#nginx-配置\" class=\"headerlink\" title=\"nginx 配置\"></a>nginx 配置</h3><p>既然是前后端分离，那当然要使用 nginx 啦~</p>\n<p>配置 chatroom.conf</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">upstream</span> chat_frontend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:8181</span>; <span class=\"comment\"># 前端工程运行的地址</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">upstream</span> chat_backend &#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">127.0.0.1:4999</span>; <span class=\"comment\"># 后端工程运行的地址</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">server</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">80</span>; <span class=\"comment\"># 监听端口</span></span><br><span class=\"line\">    <span class=\"attribute\">server_name</span>  www.chatroom.com; <span class=\"comment\">#域名</span></span><br><span class=\"line\">        <span class=\"section\">location</span><span class=\"regexp\"> ^~</span> /api &#123; <span class=\"comment\"># 普通接口路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Forwarded-Server <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_backend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"section\">location</span> /socket.io &#123; <span class=\"comment\"># socketio的路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_http_version</span> <span class=\"number\">1</span>.<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_buffering</span> <span class=\"literal\">off</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Upgrade <span class=\"variable\">$http_upgrade</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Connection <span class=\"string\">&quot;Upgrade&quot;</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_backend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"section\">location</span> / &#123; <span class=\"comment\"># 前端路由</span></span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_set_header</span> X-Forwarded-Server <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            <span class=\"attribute\">proxy_pass</span> http://chat_frontend;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置 host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">···</span><br><span class=\"line\">127.0.0.1 www.chatroom.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"通信\"><a href=\"#通信\" class=\"headerlink\" title=\"通信\"></a>通信</h3><p>前面把 flask 和 vue 都配置好了，那么先测试一下。</p>\n<p>整个流程非常简单，流程图如下：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe93449800d38~tplv-t2oaga2asx-image.image\"></p>\n<h4 id=\"vue\"><a href=\"#vue\" class=\"headerlink\" title=\"vue\"></a>vue</h4><p>获取用户输入后，向目标事件发送数据。这里我自己实现了一个简陋的 rich-text，如果不追求效果直接用 input 标签就完事了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /src/components/chat-room/message-box/message-box.vue</span></span><br><span class=\"line\">···</span><br><span class=\"line\">sendMessage (message) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 第一个参数为事件名，第二个参数为要发送的数据</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;test_input&#x27;</span>, message)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 vuex 中监听 received 事件获取服务器返回消息。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /src/store/module/room.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    SOCKET_test_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(responseData)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"flask\"><a href=\"#flask\" class=\"headerlink\" title=\"flask\"></a>flask</h4><p>后端这边就非常简单了，增加一个消息回调函数就好了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask_socketio <span class=\"keyword\">import</span> SocketIO, emit</span><br><span class=\"line\">socketio = SocketIO(app, cors_allowed_origins=<span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;test_input&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"comment\"># do someting</span></span><br><span class=\"line\">    socketio.emit(<span class=\"string\">&#x27;test_received&#x27;</span>, <span class=\"string\">&#x27;收到啦&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 或者</span></span><br><span class=\"line\">    <span class=\"comment\"># emit(&#x27;test_received&#x27;, &#x27;收到啦&#x27;, namespace=&#x27;/chatroom&#x27;)</span></span><br></pre></td></tr></table></figure>\n\n<p>要注意的是，这个 emit 没有指定某一个 room，所以会广播给在这个 namespace 下的所有人。</p>\n<p>打开谷歌浏览器，效果如下：</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/6/29/172fe94c8b5e4c45~tplv-t2oaga2asx-image.image\"></p>\n<h2 id=\"实现聊天室小-demo\"><a href=\"#实现聊天室小-demo\" class=\"headerlink\" title=\"实现聊天室小 demo\"></a>实现聊天室小 demo</h2><h3 id=\"构思\"><a href=\"#构思\" class=\"headerlink\" title=\"构思\"></a>构思</h3><p>一个简单的聊天室肯定会涉及到用户，房间和消息记录。</p>\n<h3 id=\"实现登录页面\"><a href=\"#实现登录页面\" class=\"headerlink\" title=\"实现登录页面\"></a>实现登录页面</h3><p>首先解决一下用户，最核心的是登录。先建一个用户表。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `<span class=\"keyword\">user</span>`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `<span class=\"keyword\">user</span>`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `username` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `password` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `avatar_image` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_id_set` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci COMMENT <span class=\"string\">&#x27;每个用户所参加的房间&#x27;</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_user_username`(`username`) <span class=\"keyword\">USING</span> BTREE</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">5</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br></pre></td></tr></table></figure>\n\n<p>封装一下登录接口，使用 vuex 保存登录状态。因为关闭页面后 vuex 会清掉 token 使用 cookie 来保存（axios 的封装就不说了，不是重点）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/requestApi.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">baseLogin</span> (config) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: config.<span class=\"property\">url</span>,</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: config.<span class=\"property\">data</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> service.<span class=\"title function_\">request</span>(request)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/request.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">login</span> (config) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">baseLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">response</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(response.<span class=\"property\">data</span>.<span class=\"property\">data</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>保存 token</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/libs/utility/token.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Cookies</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;js-cookie&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">TOKEN_KEY</span> = <span class=\"string\">&#x27;token&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">setToken</span> = (<span class=\"params\">token</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"title class_\">Cookies</span>.<span class=\"title function_\">set</span>(<span class=\"variable constant_\">TOKEN_KEY</span>, token, &#123; <span class=\"attr\">expires</span>: <span class=\"number\">1</span> &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title function_\">getToken</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> token = <span class=\"title class_\">Cookies</span>.<span class=\"title function_\">get</span>(<span class=\"variable constant_\">TOKEN_KEY</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (token !== <span class=\"string\">&#x27;null&#x27;</span>) <span class=\"keyword\">return</span> token</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编写 vuex 的 user 模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/user.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; getToken, setToken &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../../libs/utility/token&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; login, getUserInfo, logout &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/libs/request&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">state</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">token</span>: <span class=\"title function_\">getToken</span>(),</span><br><span class=\"line\">    <span class=\"attr\">userName</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">userId</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">avatarImage</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">getters</span>: &#123;</span><br><span class=\"line\">    getToken (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">token</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getUserName (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">userName</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getUserId (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">userId</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    getAvatarImage (state) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state.<span class=\"property\">avatarImage</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">mutations</span>: &#123;</span><br><span class=\"line\">    setToken (state, token) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">token</span> = token</span><br><span class=\"line\">      <span class=\"title function_\">setToken</span>(token)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setUserName (state, name) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">userName</span> = name</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setUserId (state, userId) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">userId</span> = userId</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    setAvatarImage (state, avatarImage) &#123;</span><br><span class=\"line\">      state.<span class=\"property\">avatarImage</span> = avatarImage</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">actions</span>: &#123;</span><br><span class=\"line\">    handleLogin (&#123; commit &#125;, config) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">login</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, responseData.<span class=\"property\">token</span>)</span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>(responseData)</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    loadUserInfo (&#123; commit &#125;) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getUserInfo</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, <span class=\"title function_\">getToken</span>())</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUserName&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUserId&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">userId</span>)</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setAvatarImage&#x27;</span>, responseData.<span class=\"property\">userInfo</span>.<span class=\"property\">avatar_image</span>)</span><br><span class=\"line\">          <span class=\"title function_\">resolve</span>(responseData)</span><br><span class=\"line\">        &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setToken&#x27;</span>, <span class=\"literal\">null</span>)</span><br><span class=\"line\">          <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">          <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 login 页面中使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/login/login.vue</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  ···</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapActions</span>([</span><br><span class=\"line\">      <span class=\"string\">&#x27;handleLogin&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;loadUserInfo&#x27;</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    checkCapslock (e) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; key &#125; = e</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">capsTooltip</span> = key &amp;&amp; key.<span class=\"property\">length</span> === <span class=\"number\">1</span> &amp;&amp; (key &gt;= <span class=\"string\">&#x27;A&#x27;</span> &amp;&amp; key &lt;= <span class=\"string\">&#x27;Z&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 登录，成功后跳转</span></span><br><span class=\"line\">    onLogin () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">loginForm</span>.<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">show</span>()</span><br><span class=\"line\">          <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/login&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">loginForm</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$router</span>.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">              <span class=\"attr\">name</span>: <span class=\"string\">&#x27;ChatRoom&#x27;</span></span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 注册，成功后回调登录</span></span><br><span class=\"line\">    onRegister () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$refs</span>.<span class=\"property\">loginForm</span>.<span class=\"title function_\">validate</span>(<span class=\"function\"><span class=\"params\">valid</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">show</span>()</span><br><span class=\"line\">          <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">            <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/register&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">data</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">loginForm</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"variable language_\">this</span>.<span class=\"title function_\">handleLogin</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">onLogin</span>()</span><br><span class=\"line\">          &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">$Loading</span>.<span class=\"title function_\">hide</span>()</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端方面，可以看看/backend/blueprint/user.py。ui 方面就不说了，不是重点。</p>\n<h3 id=\"实现房间的创建，展示和加入功能\"><a href=\"#实现房间的创建，展示和加入功能\" class=\"headerlink\" title=\"实现房间的创建，展示和加入功能\"></a>实现房间的创建，展示和加入功能</h3><p>对于房间来说，肯定要有创建和加入这两个功能的，下面先说说创建。</p>\n<p>先建个表吧</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `room`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `room`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `name` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `owner` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span> COMMENT <span class=\"string\">&#x27;房间创建人&#x27;</span>,</span><br><span class=\"line\">  `user_set` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `description` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `update_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `avatar_image` <span class=\"type\">varchar</span>(<span class=\"number\">64</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_hash_id` <span class=\"type\">varchar</span>(<span class=\"number\">32</span>) <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_avatar_image`(`avatar_image`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_create_time`(`create_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_name`(`name`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_owner`(`owner`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_update_time`(`update_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `room_ibfk_1` <span class=\"keyword\">FOREIGN</span> KEY (`owner`) <span class=\"keyword\">REFERENCES</span> `<span class=\"keyword\">user</span>` (`id`) <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> RESTRICT <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> RESTRICT</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">38</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建房间\"><a href=\"#创建房间\" class=\"headerlink\" title=\"创建房间\"></a>创建房间</h4><p>首先先明确创建房间需要什么数据，我的想法是需要房间头像，房间名和房间描述。</p>\n<p>前端主要是获取了房间头像、房间名和房间描述后发送请求到后端。这里的 upLoadFile 是自己模仿 element 来写的组件，有兴趣可以在 /fronted/src/components/base/up-load-file/up-load-file.vue 查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// /fronted/src/components/chat-room/room-list/room-list.vue</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">    &lt;el-dialog title=&quot;创建房间&quot; :visible.sync=&quot;createRoomDialog&quot;&gt;</span><br><span class=\"line\">      &lt;el-form :model=&quot;createRoom&quot; :rules=&quot;createRules&quot; ref=&quot;createRoomForm&quot;&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间名&quot; prop=&quot;hashId&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;createRoom.name&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间描述&quot; prop=&quot;description&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;createRoom.description&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间头像&quot; prop=&quot;avatarImage&quot;&gt;</span><br><span class=\"line\">          &lt;upLoadFile :maxImageNum=&quot;1&quot; @on-change=&quot;getFilePath&quot;/&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">      &lt;/el-form&gt;</span><br><span class=\"line\">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class=\"line\">        &lt;el-button @click=&quot;createRoomDialog = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button type=&quot;primary&quot; @click=&quot;handleCreateRoom&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-dialog&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; post &#125; from &#x27;@/libs/request&#x27;</span><br><span class=\"line\">import upLoadFile from &#x27;@/components/base/up-load-file&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;RoomList&#x27;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    roomList: &#123;</span><br><span class=\"line\">      default: () =&gt; [],</span><br><span class=\"line\">      type: Array</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    ···</span><br><span class=\"line\">    upLoadFile</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">      createRoom: &#123;</span><br><span class=\"line\">        name: &#x27;&#x27;,</span><br><span class=\"line\">        description: &#x27;&#x27;,</span><br><span class=\"line\">        avatarImage: &#x27;&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  method: &#123;</span><br><span class=\"line\">    getFilePath (imageList) &#123;</span><br><span class=\"line\">      this.createRoom.avatarImage = imageList[0].base64Path</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    handleCreateRoom () &#123;</span><br><span class=\"line\">      this.$refs.createRoomForm.validate(valid =&gt; &#123;</span><br><span class=\"line\">        if (valid) &#123;</span><br><span class=\"line\">          this.$Loading.show()</span><br><span class=\"line\">          const config = &#123;</span><br><span class=\"line\">            url: &#x27;/room/create&#x27;,</span><br><span class=\"line\">            data: this.createRoom</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          post(config).then((responseData) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.createRoom.name = &#x27;&#x27;</span><br><span class=\"line\">            this.createRoomDialog = false</span><br><span class=\"line\">            this.createRoom = &#123;</span><br><span class=\"line\">              name: &#x27;&#x27;,</span><br><span class=\"line\">              description: &#x27;&#x27;,</span><br><span class=\"line\">              avatarImage: &#x27;&#x27;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            this.$message(&#123;</span><br><span class=\"line\">              message: &#x27;创建成功&#x27;,</span><br><span class=\"line\">              type: &#x27;success&#x27;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            this.$emit(&#x27;create-room-success&#x27;, responseData.room)</span><br><span class=\"line\">          &#125;).catch((err) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.createRoomDialog = false</span><br><span class=\"line\">            console.log(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>后端这边就简单了，直接插入数据库。插入时候使用 base64 来生成房间码，之后加入房间要用。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/room.py</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"meta\">@room_bp.route(<span class=\"params\"><span class=\"string\">&#x27;/api/room/create&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@verify_token</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">room_create</span>(<span class=\"params\">tokenData</span>):</span><br><span class=\"line\">    values = request.get_json()</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        room = Room(name=values[<span class=\"string\">&#x27;name&#x27;</span>],</span><br><span class=\"line\">                    description=values[<span class=\"string\">&#x27;description&#x27;</span>],</span><br><span class=\"line\">                    user_set=<span class=\"built_in\">str</span>(tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]),</span><br><span class=\"line\">                    owner=user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                    avatar_image=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        db.session.add(room)</span><br><span class=\"line\">        db.session.flush()</span><br><span class=\"line\">        room.room_hash_id = hashlib.md5(<span class=\"string\">f&#x27;<span class=\"subst\">&#123;room.<span class=\"built_in\">id</span>&#125;</span><span class=\"subst\">&#123;time.time()&#125;</span>&#x27;</span>.encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class=\"line\">        room.user_set = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;room.user_set&#125;</span>,<span class=\"subst\">&#123;user.<span class=\"built_in\">id</span>&#125;</span>&#x27;</span> <span class=\"keyword\">if</span> room.user_set <span class=\"keyword\">else</span> user.<span class=\"built_in\">id</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> values[<span class=\"string\">&#x27;avatarImage&#x27;</span>]:</span><br><span class=\"line\">            avatartImageList = values[<span class=\"string\">&#x27;avatarImage&#x27;</span>].split(<span class=\"string\">&#x27;,&#x27;</span>)</span><br><span class=\"line\">            suffix = avatartImageList[<span class=\"number\">0</span>].split(<span class=\"string\">&#x27;/&#x27;</span>)[<span class=\"number\">1</span>].split(<span class=\"string\">&#x27;;&#x27;</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            filename = <span class=\"string\">f&#x27;room_avatar/<span class=\"subst\">&#123;room.room_hash_id&#125;</span>.<span class=\"subst\">&#123;suffix&#125;</span>&#x27;</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(filename)</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">f&#x27;media/<span class=\"subst\">&#123;filename&#125;</span>&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">                f.write(base64.b64decode(avatartImageList[<span class=\"number\">1</span>]))</span><br><span class=\"line\">            room.avatar_image = filename</span><br><span class=\"line\">        user.room_id_set = <span class=\"string\">f&#x27;<span class=\"subst\">&#123;user.room_id_set&#125;</span>,<span class=\"subst\">&#123;room.<span class=\"built_in\">id</span>&#125;</span>&#x27;</span> <span class=\"keyword\">if</span> user.room_id_set <span class=\"keyword\">else</span> room.<span class=\"built_in\">id</span></span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;data&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;room&#x27;</span>: JSONHelper.model_to_json(room)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;成功&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;data&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;失败失败&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"展示房间\"><a href=\"#展示房间\" class=\"headerlink\" title=\"展示房间\"></a>展示房间</h4><p>这个其实就是拉一个房间列表。要注意的是前端获取到房间列表后，要调用 join_all 这个事件监听这些房间的消息。</p>\n<p>后端</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@room_bp.route(<span class=\"params\"><span class=\"string\">&#x27;/api/room/list&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@verify_token</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">room_list</span>(<span class=\"params\">tokenData</span>):</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=tokenData[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        roomlist = Room.query.<span class=\"built_in\">filter</span>(Room.<span class=\"built_in\">id</span>.in_(user.room_id_set.split(<span class=\"string\">&#x27;,&#x27;</span>))).<span class=\"built_in\">all</span>() <span class=\"keyword\">if</span> user.room_id_set <span class=\"keyword\">else</span> []</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;data&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;roomList&#x27;</span>: JSONHelper.to_json_list(roomlist)</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;成功&#x27;</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">200</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;data&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;message&#x27;</span>: <span class=\"string\">&#x27;失败失败&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;status&#x27;</span>: <span class=\"number\">500</span></span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>前端这边先在 room 模块里编写加载房间列表函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/room.js</span></span><br><span class=\"line\">···</span><br><span class=\"line\">loadRoomList (&#123; commit &#125;) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> config = &#123;</span><br><span class=\"line\">      <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/room/list&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">get</span>(config).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">responseData</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setRoomList&#x27;</span>, responseData.<span class=\"property\">roomList</span>)</span><br><span class=\"line\">      <span class=\"title function_\">resolve</span>(responseData.<span class=\"property\">roomList</span>)</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">reject</span>(err)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在 chat-room 页面调用。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/chat-room/chat-room.vue</span></span><br><span class=\"line\">mounted () &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">loadRoomList</span>().<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">roomList</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">      <span class=\"attr\">roomList</span>: roomList.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">room</span> =&gt;</span> room.<span class=\"property\">id</span>),</span><br><span class=\"line\">      <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;join_all&#x27;</span>, request)</span><br><span class=\"line\">  &#125;).<span class=\"title function_\">catch</span>(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端响应 join_all 事件，调用 join_room 加入用户所在的所有房间。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;join_all&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">join_chats</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;加入多个聊天室</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=message[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user <span class=\"keyword\">and</span> <span class=\"built_in\">len</span>(message[<span class=\"string\">&#x27;roomList&#x27;</span>]) &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> roomId <span class=\"keyword\">in</span> message[<span class=\"string\">&#x27;roomList&#x27;</span>]:</span><br><span class=\"line\">            join_room(roomId)</span><br><span class=\"line\">            emit(<span class=\"string\">&#x27;received&#x27;</span>, &#123; <span class=\"comment\"># 发送加入消息</span></span><br><span class=\"line\">                <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                    <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                    <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"string\">&#x27;roomId&#x27;</span>: roomId,</span><br><span class=\"line\">                <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;join&#x27;</span></span><br><span class=\"line\">            &#125;, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>, room=roomId)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"加入房间\"><a href=\"#加入房间\" class=\"headerlink\" title=\"加入房间\"></a>加入房间</h4><p>获取对应的房间码后，输入加入就 OK 了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// /fronted/src/components/chat-room/room-list/room-list.vue</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">    &lt;el-dialog title=&quot;加入房间&quot; :visible.sync=&quot;joinRoomDialog&quot;&gt;</span><br><span class=\"line\">      &lt;el-form :model=&quot;joinRoom&quot; :rules=&quot;joinRules&quot; ref=&quot;joinRoomForm&quot;&gt;</span><br><span class=\"line\">        &lt;el-form-item label=&quot;房间号&quot; prop=&quot;hashId&quot;&gt;</span><br><span class=\"line\">          &lt;el-input v-model=&quot;joinRoom.hashId&quot; autocomplete=&quot;off&quot; :maxlength=&#x27;32&#x27; :minlength=&#x27;32&#x27;&gt;&lt;/el-input&gt;</span><br><span class=\"line\">        &lt;/el-form-item&gt;</span><br><span class=\"line\">      &lt;/el-form&gt;</span><br><span class=\"line\">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class=\"line\">        &lt;el-button @click=&quot;joinRoomDialog = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class=\"line\">        &lt;el-button type=&quot;primary&quot; @click=&quot;handleJoinRoom&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/el-dialog&gt;</span><br><span class=\"line\">···</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">import &#123; post &#125; from &#x27;@/libs/request&#x27;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &#x27;RoomList&#x27;,</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    roomList: &#123;</span><br><span class=\"line\">      default: () =&gt; [],</span><br><span class=\"line\">      type: Array</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      ···</span><br><span class=\"line\">      joinRoom: &#123;</span><br><span class=\"line\">        hashId: &#x27;&#x27;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  method: &#123;</span><br><span class=\"line\">    handleJoinRoom () &#123;</span><br><span class=\"line\">      this.$refs.joinRoomForm.validate(valid =&gt; &#123;</span><br><span class=\"line\">        if (valid) &#123;</span><br><span class=\"line\">          this.$Loading.show()</span><br><span class=\"line\">          const config = &#123;</span><br><span class=\"line\">            url: &#x27;/room/join&#x27;,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">              roomIdHash: this.joinRoom.hashId</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          post(config).then((responseData) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            this.joinRoomDialog = false</span><br><span class=\"line\">            this.$message(&#123;</span><br><span class=\"line\">              message: &#x27;加入成功&#x27;,</span><br><span class=\"line\">              type: &#x27;success&#x27;</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">            this.$emit(&#x27;create-room-success&#x27;, responseData.room)</span><br><span class=\"line\">          &#125;).catch((err) =&gt; &#123;</span><br><span class=\"line\">            this.$Loading.hide()</span><br><span class=\"line\">            console.log(err)</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>加入成功后，和创建一样，调用 join_one_chat 事件来加入房间。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/views/chat-room/chat-room.vue</span></span><br><span class=\"line\">handleCreateJoinRoom (room) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> roomList = <span class=\"variable language_\">this</span>.<span class=\"property\">roomList</span></span><br><span class=\"line\">  roomList.<span class=\"title function_\">push</span>(room)</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$store</span>.<span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setRoomList&#x27;</span>, roomList)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">    <span class=\"attr\">roomId</span>: room.<span class=\"property\">id</span>,</span><br><span class=\"line\">    <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;join_one_chat&#x27;</span>, request)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端响应回调。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;join_one_chat&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">join_one_chat</span>(<span class=\"params\">join</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;加入聊天室</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    room = Room.query.filter_by(<span class=\"built_in\">id</span>=join[<span class=\"string\">&#x27;roomId&#x27;</span>]).first()</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=join[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(join)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> room <span class=\"keyword\">and</span> user:</span><br><span class=\"line\">        join_room(room.<span class=\"built_in\">id</span>)</span><br><span class=\"line\">        emit(<span class=\"string\">&#x27;received&#x27;</span>, &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;roomId&#x27;</span>: room.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span>: <span class=\"string\">&#x27;join&#x27;</span></span><br><span class=\"line\">        &#125;, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>, room=room)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"消息记录的发送与保存\"><a href=\"#消息记录的发送与保存\" class=\"headerlink\" title=\"消息记录的发送与保存\"></a>消息记录的发送与保存</h3><p>先建个表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SET</span> NAMES utf8mb4;</span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-----------------------------</span></span><br><span class=\"line\"><span class=\"operator\">-</span><span class=\"keyword\">Table</span> structure <span class=\"keyword\">for</span> room_record</span><br><span class=\"line\"><span class=\"comment\">-----------------------------</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> IF <span class=\"keyword\">EXISTS</span> `room_record`;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> `room_record`  (</span><br><span class=\"line\">  `id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> AUTO_INCREMENT,</span><br><span class=\"line\">  `content` longtext <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> utf8mb4 <span class=\"keyword\">COLLATE</span> utf8mb4_0900_ai_ci,</span><br><span class=\"line\">  `create_time` datetime(<span class=\"number\">0</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `room_id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  `user_id` <span class=\"type\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">PRIMARY</span> KEY (`id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_record_create_time`(`create_time`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  INDEX `ix_room_record_room_id`(`room_id`) <span class=\"keyword\">USING</span> BTREE,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> `room_record_ibfk_1` <span class=\"keyword\">FOREIGN</span> KEY (`room_id`) <span class=\"keyword\">REFERENCES</span> `room` (`id`) <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> RESTRICT <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> RESTRICT</span><br><span class=\"line\">) ENGINE <span class=\"operator\">=</span> InnoDB AUTO_INCREMENT <span class=\"operator\">=</span> <span class=\"number\">12</span> <span class=\"type\">CHARACTER</span> <span class=\"keyword\">SET</span> <span class=\"operator\">=</span> utf8mb4 <span class=\"keyword\">COLLATE</span> <span class=\"operator\">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class=\"operator\">=</span> <span class=\"keyword\">Dynamic</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SET</span> FOREIGN_KEY_CHECKS <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>用户选择了对应房间，在对应房间中发送消息就 OK 了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/components/chat-room/message-box/message-box.vue</span></span><br><span class=\"line\">···</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters, mapActions &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vuex&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> util <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/libs/utility/util.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">UserMessage</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../user-message/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">JoinMessage</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../join-message/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">RichText</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@/components/base/rich-text/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;MessageBox&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">components</span>: &#123;</span><br><span class=\"line\">    <span class=\"title class_\">UserMessage</span>,</span><br><span class=\"line\">    <span class=\"title class_\">JoinMessage</span>,</span><br><span class=\"line\">    <span class=\"title class_\">RichText</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">computed</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapGetters</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">selectedRoom</span>: <span class=\"string\">&#x27;getSelectedRoom&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">userId</span>: <span class=\"string\">&#x27;getUserId&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">userName</span>: <span class=\"string\">&#x27;getUserName&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">messageList</span>: <span class=\"string\">&#x27;getMessageList&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">isUpdate</span>: <span class=\"string\">&#x27;getUpdate&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">avatarImage</span>: <span class=\"string\">&#x27;getAvatarImage&#x27;</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">watch</span>: &#123;</span><br><span class=\"line\">    selectedRoom () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">setMessageContentScroll</span>()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    isUpdate () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isUpdate</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.$forceUpdate()</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">updateComplete</span>()</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">setMessageContentScroll</span>()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    ...<span class=\"title function_\">mapActions</span>([</span><br><span class=\"line\">      <span class=\"string\">&#x27;updateComplete&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;userInput&#x27;</span></span><br><span class=\"line\">    ]),</span><br><span class=\"line\">    setMessageContentScroll () &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.$nextTick(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> messageContent = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;messageContent&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (messageContent) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (messageContent.<span class=\"property\">scrollHeight</span> &gt; messageContent.<span class=\"property\">clientHeight</span>) &#123;</span><br><span class=\"line\">            messageContent.<span class=\"property\">scrollTop</span> = messageContent.<span class=\"property\">scrollHeight</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sendMessage (message) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageId = <span class=\"title class_\">Number</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageContext = &#123;</span><br><span class=\"line\">        <span class=\"attr\">user</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">id</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userName</span>,</span><br><span class=\"line\">          <span class=\"attr\">avatarImage</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">avatarImage</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">roomId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span>,</span><br><span class=\"line\">        <span class=\"attr\">id</span>: messageId,</span><br><span class=\"line\">        message,</span><br><span class=\"line\">        <span class=\"attr\">loading</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;input&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> request = &#123;</span><br><span class=\"line\">        <span class=\"attr\">userId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">userId</span>,</span><br><span class=\"line\">        <span class=\"attr\">roomId</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span>,</span><br><span class=\"line\">        <span class=\"attr\">id</span>: messageId,</span><br><span class=\"line\">        message,</span><br><span class=\"line\">        <span class=\"attr\">type</span>: <span class=\"string\">&#x27;input&#x27;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">userInput</span>(messageContext)</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"property\">$socket</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user_send_message&#x27;</span>, request)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>后端。接收到请求后，完成插入数据库处理并通过 received 事件返回给前端</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /backend/blueprint/socketio.py</span></span><br><span class=\"line\"><span class=\"meta\">@socketio.on(<span class=\"params\"><span class=\"string\">&#x27;user_send_message&#x27;</span>, namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_input</span>(<span class=\"params\">message</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;获取用户输入</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    userId = message[<span class=\"string\">&#x27;userId&#x27;</span>]</span><br><span class=\"line\">    user = User.query.filter_by(<span class=\"built_in\">id</span>=message[<span class=\"string\">&#x27;userId&#x27;</span>]).first()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">        response = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;user&#x27;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&#x27;id&#x27;</span>: user.<span class=\"built_in\">id</span>,</span><br><span class=\"line\">                <span class=\"string\">&#x27;name&#x27;</span>: user.username,</span><br><span class=\"line\">                <span class=\"string\">&#x27;avatarImage&#x27;</span>: user.avatar_image,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"string\">&#x27;message&#x27;</span>: message[<span class=\"string\">&#x27;message&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;roomId&#x27;</span>: message[<span class=\"string\">&#x27;roomId&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;id&#x27;</span>: message[<span class=\"string\">&#x27;id&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;type&#x27;</span>: message[<span class=\"string\">&#x27;type&#x27;</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;time&#x27;</span>: datetime.utcnow().isoformat(),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        roomRecord = RoomRecord(content=message[<span class=\"string\">&#x27;message&#x27;</span>], user_id=user.<span class=\"built_in\">id</span>, room_id=message[<span class=\"string\">&#x27;roomId&#x27;</span>])</span><br><span class=\"line\">        db.session.add(roomRecord)</span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        socketio.emit(<span class=\"string\">&#x27;received&#x27;</span>, response,</span><br><span class=\"line\">                        namespace=<span class=\"string\">&#x27;/chatroom&#x27;</span>,</span><br><span class=\"line\">                        room=message[<span class=\"string\">&#x27;roomId&#x27;</span>])</span><br></pre></td></tr></table></figure>\n\n<p>前端 vuex 的 room 模块接收</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /fronted/src/store/module/room.js</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">action</span>: &#123;</span><br><span class=\"line\">    updateComplete (&#123; commit &#125;) &#123;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    SOCKET_received (&#123; state, rootState, commit &#125;, responseData) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> messageList = state.<span class=\"property\">messageList</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> user = rootState.<span class=\"property\">user</span></span><br><span class=\"line\">      responseData.<span class=\"property\">time</span> = <span class=\"title function_\">normalizeTimeDetail</span>(responseData.<span class=\"property\">time</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (user.<span class=\"property\">userId</span> === responseData.<span class=\"property\">user</span>.<span class=\"property\">id</span> &amp;&amp; responseData.<span class=\"property\">type</span> !== <span class=\"string\">&#x27;join&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = messageList[responseData.<span class=\"property\">roomId</span>].<span class=\"property\">length</span> <span class=\"number\">1</span>; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">user</span>.<span class=\"property\">id</span> === user.<span class=\"property\">userId</span> &amp;&amp; responseData.<span class=\"property\">id</span> === messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">id</span>) &#123;</span><br><span class=\"line\">            messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">loading</span> = <span class=\"literal\">false</span></span><br><span class=\"line\">            messageList[responseData.<span class=\"property\">roomId</span>][i].<span class=\"property\">time</span> = responseData.<span class=\"property\">time</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!state.<span class=\"property\">update</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!messageList[responseData.<span class=\"property\">roomId</span>]) &#123;</span><br><span class=\"line\">          messageList[responseData.<span class=\"property\">roomId</span>] = []</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        messageList[responseData.<span class=\"property\">roomId</span>].<span class=\"title function_\">push</span>(responseData)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!state.<span class=\"property\">update</span>) &#123;</span><br><span class=\"line\">          <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setUpdate&#x27;</span>, state.<span class=\"property\">selectedRoom</span> ? responseData.<span class=\"property\">roomId</span> === state.<span class=\"property\">selectedRoom</span>.<span class=\"property\">id</span> : <span class=\"literal\">false</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"title function_\">commit</span>(<span class=\"string\">&#x27;setMessageList&#x27;</span>, messageList)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>说到这里其实也说完了重点的地方了，有兴趣可以看看源码。第一次写文章，有不足的地方请大佬们多多指点。</p>\n<h2 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h2><ul>\n<li>[1] <a href=\"https://www.runoob.com/html/html5-websocket.html\">https://www.runoob.com/html/html5-websocket.html</a></li>\n<li>[2] <a href=\"https://www.npmjs.com/package/vue-socket.io\">https://www.npmjs.com/package/vue-socket.io</a></li>\n<li>[3] <a href=\"https://flask-socketio.readthedocs.io/en/latest/\">https://flask-socketio.readthedocs.io/en/latest/</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}